{"version":3,"sources":["assets/fonts/gotham-bold.woff2","components/Heading/index.js","components/Text/index.js","components/Section/index.js","components/DecoderText/index.js","utils/image.js","components/Divider/index.js","components/Link/index.js","components/Image/index.js","components/Footer/index.js","utils/three.js","assets/arrow-down.svg","pages/Home/Intro.js","assets/iphone-11.glb","assets/macbook-pro.glb","components/Model/deviceModels.js","components/Model/index.js","assets/katakana-project.svg","pages/Home/ProjectSummary.js","assets/idea.jpg","pages/Home/Profile.js","assets/parkmodel.jpg","pages/Home/index.js"],"names":["Heading","children","level","as","align","weight","className","rest","clampedLevel","Math","min","max","Component","Helmet","rel","href","GothamBold","crossorigin","classNames","Text","size","secondary","Section","forwardRef","ref","glyphs","CharType","DecoderText","text","start","delay","startDelay","output","useRef","type","value","container","reduceMotion","usePrefersReducedMotion","useEffect","containerInstance","current","content","split","animation","renderOutput","characterMap","map","item","innerHTML","join","springValue","position","index","rand","floor","random","length","shuffle","prerender","chain","spring","from","to","stiffness","damping","stop","memo","async","getImageFromSrcSet","src","srcSet","sizes","Promise","resolve","reject","Error","tempImage","Image","srcset","onLoad","removeEventListener","source","currentSrc","addEventListener","error","resolveVideoSrcFromSrcSet","sources","srcString","width","image","height","canvas","document","createElement","ctx","getContext","fillStyle","fillRect","toDataURL","remove","generateImage","Number","replace","fakeSrcSet","fakeSrc","find","Divider","lineWidth","lineHeight","notchWidth","notchHeight","collapseDelay","collapsed","style","numToMs","defaultProps","VALID_EXT","Link","target","isValidExtension","includes","pop","isAnchor","relValue","undefined","targetValue","RouterLink","onMouseUp","blurOnMouseUp","ImageElements","loaded","inViewport","placeholder","alt","play","reveal","prefersReducedMotion","showPlaceholder","setShowPlaceholder","useState","playing","setPlaying","showPlayButton","setShowPlayButton","isHovered","setIsHovered","isFocused","setIsFocused","placeholderSize","setPlaceholderSize","videoSrc","setVideoSrc","placeholderRef","videoRef","isVideo","endsWith","imgSrc","showFullRes","purgePlaceholder","placeholderElement","resolvedVideoSrc","resolveVideoSrc","pause","togglePlaying","event","preventDefault","paused","handleFocusPlayButton","onMouseOver","onMouseOut","muted","loop","playsInline","autoPlay","role","onLoadStart","in","onExit","reflow","onExited","timeout","enter","exit","msToNum","tokens","base","durationS","status","visible","onFocus","onBlur","onClick","icon","decoding","raised","setLoaded","themeId","useTheme","containerRef","useInViewport","useCallback","Footer","Date","getFullYear","cleanScene","scene","traverse","object","isMesh","geometry","dispose","material","isMaterial","cleanMaterial","key","Object","keys","cleanRenderer","renderer","forceContextLoss","removeLights","lights","light","parent","_path","_extends","assign","i","arguments","prototype","hasOwnProperty","call","apply","this","SvgArrowDown","title","titleId","props","svgRef","stroke","viewBox","id","d","strokeWidth","fill","ForwardRef","DisplacementSphere","lazy","Intro","sectionRef","disciplines","scrollIndicatorHidden","theme","disciplineIndex","setDisciplineIndex","windowSize","useWindowSize","prevTheme","usePrevious","introLabel","slice","currentDisciplines","filter","useInterval","tabIndex","Transition","appear","onEnter","fallback","VisuallyHidden","durationXS","classNameperppplllsss","TransitionGroup","component","wordStatus","durationL","media","tablet","ModelAnimationType","models","phone","url","iphone11","x","y","z","laptop","macbookPro","MeshType","Model","show","showDelay","cameraPosition","enableControls","modelData","setModelData","camera","textureLoader","modelLoader","modelGroup","shadowGroup","renderTarget","renderTargetBlur","shadowCamera","depthMaterial","horizontalBlurMaterial","verticalBlurMaterial","plane","blurPlane","fillPlane","isInViewport","threshold","clientWidth","clientHeight","WebGLRenderer","alpha","antialias","powerPreference","setPixelRatio","setSize","outputEncoding","sRGBEncoding","physicallyCorrectLights","PerspectiveCamera","set","Scene","TextureLoader","GLTFLoader","Group","ambientLight","AmbientLight","keyLight","DirectionalLight","fillLight","forEach","add","rotateX","PI","renderTargetSize","WebGLRenderTarget","texture","generateMipmaps","planeGeometry","PlaneBufferGeometry","planeMaterial","MeshBasicMaterial","opacity","transparent","Mesh","scale","fillMaterial","color","OrthographicCamera","planeWidth","planeHeight","rotation","MeshDepthMaterial","userData","darkness","onBeforeCompile","shader","uniforms","fragmentShader","depthTest","depthWrite","ShaderMaterial","HorizontalBlurShader","VerticalBlurShader","applyScreenTexture","node","encoding","minFilter","LinearFilter","magFilter","flipY","anisotropy","capabilities","getMaxAnisotropy","initTexture","Color","modelConfigPromises","model","loadFullResTexture","gltf","all","loadAsync","convertSRGBToLinear","name","fullSize","renderFrame","positionVector","Vector3","toArray","startPosition","endPosition","modelValue","restSpeed","frameNode","startRotation","MathUtils","degToRad","endRotation","getModelAnimation","blurShadow","amount","tDiffuse","h","setRenderTarget","render","v","initialBackground","background","overrideMaterial","blurAmount","introSprings","loadedModels","handleModelLoad","modelAnimation","push","loadScene","rotationSpring","rotationSpringValue","onMouseMove","innerWidth","innerHeight","window","clientX","clientY","get","velocity","getVelocity","mass","handleResize","aspect","updateProjectionMatrix","SvgKatakanaProject","ProjectSummary","description","buttonText","buttonLink","alternate","externalLink","isExternal","isMobile","svgOpacity","indexText","phoneSizes","laptopSizes","renderDetails","Button","iconHoverShift","iconEnd","renderPreview","isVisible","deviceModels","textures","ProfileText","Profile","ProfileImg","mobile","Home","useRouteTransition","hash","state","useLocation","initHash","visibleSections","setVisibleSections","setScrollIndicatorHidden","intro","projectOne","details","revealSections","sectionObserver","IntersectionObserver","entries","observer","entry","isIntersecting","section","unobserve","prevSections","rootMargin","indicatorObserver","observe","disconnect","hasEntered","supportsNativeSmoothScroll","documentElement","scrollObserver","scrollTimeout","handleHashchange","scroll","clearTimeout","hashSections","hashString","element","behavior","top","offsetTop","setTimeout","focus","left","scrollTo","park_model"],"mappings":"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","file":"static/js/3.978cf0e3.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/gotham-bold.73ce573b.woff2\";","import { Fragment } from 'react'\nimport classNames from 'classnames'\nimport { Helmet } from 'react-helmet'\nimport GothamBold from 'assets/fonts/gotham-bold.woff2'\nimport './index.css'\n\nconst Heading = ({\n    children,\n    level = 1,\n    as,\n    align = 'auto',\n    weight = 'medium',\n    className,\n    ...rest\n}) => {\n    const clampedLevel = Math.min(Math.max(level, 0), 4)\n    const Component = as || `h${Math.max(clampedLevel, 1)}`\n\n    return (\n        <Fragment>\n            {/* Conditionally load the bold font weight because we use it less frequently */}\n            {weight === 'bold' && (\n                <Helmet>\n                    <link rel=\"preload\" href={GothamBold} as=\"font\" crossorigin=\"\" />\n                    <style>\n                        {`\n              @font-face {\n                font-family: 'Gotham';\n                font-weight: 700;\n                src: url(${GothamBold}) format('woff2');\n                font-display: swap;\n              }\n            `}\n                    </style>\n                </Helmet>\n            )}\n            <Component\n                className={classNames(\n                    className,\n                    'heading',\n                    `heading--align-${align}`,\n                    `heading--level-${clampedLevel}`,\n                    `heading--weight-${weight}`\n                )}\n                {...rest}\n            >\n                {children}\n            </Component>\n        </Fragment>\n    )\n}\n\nexport default Heading\n","import classNames from 'classnames'\nimport './index.css'\n\nconst Text = ({\n    children,\n    size = 'm',\n    as: Component = 'p',\n    align = 'auto',\n    weight = 'auto',\n    secondary,\n    className,\n    ...rest\n}) => {\n    return (\n        <Component\n            className={classNames(\n                className,\n                'text',\n                `text--align-${align}`,\n                `text--size-${size}`,\n                `text--weight-${weight}`,\n                {\n                    'text--secondary': secondary,\n                }\n            )}\n            {...rest}\n        >\n            {children}\n        </Component>\n    )\n}\n\nexport default Text\n","import { forwardRef } from 'react'\nimport classNames from 'classnames'\nimport './index.css'\n\nconst Section = forwardRef(\n    ({ as: Component = 'div', children, className, ...rest }, ref) => (\n        <Component className={classNames('section', className)} ref={ref} {...rest}>\n            {children}\n        </Component>\n    )\n)\n\nexport default Section\n","import { useRef, useEffect, memo } from 'react'\nimport classNames from 'classnames'\nimport { usePrefersReducedMotion } from 'hooks'\nimport { spring, chain, delay, value } from 'popmotion'\nimport VisuallyHidden from 'components/VisuallyHidden'\nimport prerender from 'utils/prerender'\nimport './index.css'\n\n// prettier-ignore\nconst glyphs = [\n  'ア', 'イ', 'ウ', 'エ', 'オ',\n  'カ', 'キ', 'ク', 'ケ', 'コ',\n  'サ', 'シ', 'ス', 'セ', 'ソ',\n  'タ', 'チ', 'ツ', 'テ', 'ト',\n  'ナ', 'ニ', 'ヌ', 'ネ', 'ノ',\n  'ハ', 'ヒ', 'フ', 'ヘ', 'ホ',\n  'マ', 'ミ', 'ム', 'メ', 'モ',\n  'ヤ', 'ユ', 'ヨ', 'ー',\n  'ラ', 'リ', 'ル', 'レ', 'ロ',\n  'ワ', 'ヰ', 'ヱ', 'ヲ', 'ン',\n  'ガ', 'ギ', 'グ', 'ゲ', 'ゴ',\n  'ザ', 'ジ', 'ズ', 'ゼ', 'ゾ',\n  'ダ', 'ヂ', 'ヅ', 'デ', 'ド',\n  'バ', 'ビ', 'ブ', 'ベ', 'ボ',\n  'パ', 'ピ', 'プ', 'ペ', 'ポ',\n];\n\nconst CharType = {\n    Glyph: 'glyph',\n    Value: 'value',\n}\n\nfunction shuffle(content, output, position) {\n    return content.map((value, index) => {\n        if (index < position) {\n            return { type: CharType.Value, value }\n        }\n\n        if (position % 1 < 0.5) {\n            const rand = Math.floor(Math.random() * glyphs.length)\n            return { type: CharType.Glyph, value: glyphs[rand] }\n        }\n\n        return { type: CharType.Glyph, value: output[index].value }\n    })\n}\n\nconst DecoderText = ({\n    text,\n    start = true,\n    delay: startDelay = 0,\n    className,\n    ...rest\n}) => {\n    const output = useRef([{ type: CharType.Glyph, value: '' }])\n    const container = useRef()\n    const reduceMotion = usePrefersReducedMotion()\n\n    useEffect(() => {\n        const containerInstance = container.current\n        const content = text.split('')\n        let animation\n\n        const renderOutput = () => {\n            const characterMap = output.current.map(item => {\n                return `<span class=\"decoder-text__${item.type}\">${item.value}</span>`\n            })\n\n            containerInstance.innerHTML = characterMap.join('')\n        }\n\n        const springValue = value(0, position => {\n            output.current = shuffle(content, output.current, position)\n            renderOutput()\n        })\n\n        if (start && !animation && !reduceMotion && !prerender) {\n            animation = chain(\n                delay(startDelay),\n                spring({\n                    from: 0,\n                    to: content.length,\n                    stiffness: 8,\n                    damping: 5,\n                })\n            ).start(springValue)\n        }\n\n        if (reduceMotion) {\n            output.current = content.map((value, index) => ({\n                type: CharType.Value,\n                value: content[index],\n            }))\n            renderOutput()\n        }\n\n        return () => {\n            if (animation) {\n                animation.stop()\n            }\n        }\n    }, [reduceMotion, start, startDelay, text])\n\n    return (\n        <span className={classNames('decoder-text', className)} {...rest}>\n            <VisuallyHidden className=\"decoder-text__label\">{text}</VisuallyHidden>\n            <span aria-hidden className=\"decoder-text__content\" ref={container} />\n        </span>\n    )\n}\n\nexport default memo(DecoderText)\n","/**\n * Uses the browser's image loading to get the correct image src from a srcSet\n */\nexport async function getImageFromSrcSet({ src, srcSet, sizes }) {\n    return new Promise((resolve, reject) => {\n        try {\n            if (!src && !srcSet) {\n                throw new Error('No image src or srcSet provided')\n            }\n\n            const tempImage = new Image()\n\n            if (src) {\n                tempImage.src = src\n            }\n\n            if (srcSet) {\n                tempImage.srcset = srcSet\n            }\n\n            if (sizes) {\n                tempImage.sizes = sizes\n            }\n\n            const onLoad = () => {\n                tempImage.removeEventListener('load', onLoad)\n                const source = tempImage.currentSrc\n                resolve(source)\n            }\n\n            tempImage.addEventListener('load', onLoad)\n        } catch (error) {\n            reject(`Error loading ${srcSet}: ${error}`)\n        }\n    })\n}\n\n/**\n * Generates a transparent png of a given width and height\n */\nexport function generateImage(width = 1, height = 1) {\n    const canvas = document.createElement('canvas')\n    const ctx = canvas.getContext('2d')\n\n    canvas.width = width\n    canvas.height = height\n\n    ctx.fillStyle = 'rgba(0, 0, 0, 0)'\n    ctx.fillRect(0, 0, width, height)\n    const image = canvas.toDataURL('image/png', '')\n    canvas.remove()\n    return image\n}\n\n/**\n * Use native image srcSet resolution for video sources\n */\nexport async function resolveVideoSrcFromSrcSet(srcSet) {\n    const sources = srcSet.split(', ').map(srcString => {\n        const [src, width] = srcString.split(' ')\n        const image = generateImage(Number(width.replace('w', '')))\n        return { src, image, width }\n    })\n\n    const fakeSrcSet = sources.map(({ image, width }) => `${image} ${width}`).join(', ')\n    const fakeSrc = await getImageFromSrcSet({ srcSet: fakeSrcSet })\n\n    const videoSrc = sources.find(src => src.image === fakeSrc)\n    return videoSrc.src\n}\n","import classNames from 'classnames'\nimport { numToMs } from 'utils/style'\nimport './index.css'\n\nconst Divider = ({\n    lineWidth,\n    lineHeight,\n    notchWidth,\n    notchHeight,\n    collapseDelay,\n    collapsed,\n    className,\n    style,\n}) => (\n    <div\n        className={classNames('divider', className)}\n        style={{\n            '--lineWidth': lineWidth,\n            '--lineHeight': lineHeight,\n            '--notchWidth': notchWidth,\n            '--notchHeight': notchHeight,\n            '--collapseDelay': numToMs(collapseDelay),\n            ...style,\n        }}\n    >\n        <div\n            className={classNames('divider__line', {\n                'divider__line--collapsed': collapsed,\n            })}\n        />\n        <div\n            className={classNames('divider__notch', {\n                'divider__notch--collapsed': collapsed,\n            })}\n            style={{ '--collapseDelay': numToMs(collapseDelay + 160) }}\n        />\n    </div>\n)\n\nDivider.defaultProps = {\n    lineWidth: '100%',\n    lineHeight: '2px',\n    notchWidth: '90px',\n    notchHeight: '10px',\n    collapsed: false,\n    collapseDelay: 0,\n}\n\nexport default Divider\n","import { Link as RouterLink } from 'react-router-dom'\nimport classNames from 'classnames'\nimport { blurOnMouseUp } from 'utils/focus'\nimport './index.css'\n\n// File extensions that can be linked to\nconst VALID_EXT = ['txt', 'png', 'jpg']\n\nconst Link = ({ rel, target, children, secondary, className, href, as, ...rest }) => {\n    const isValidExtension = VALID_EXT.includes(href?.split('.').pop())\n    const isAnchor = href?.includes('://') || href?.[0] === '#' || isValidExtension\n    const relValue = rel || (isAnchor ? 'noreferrer noopener' : undefined)\n    const targetValue = target || (isAnchor ? '_blank' : undefined)\n    const Component = as || (isAnchor ? 'a' : RouterLink)\n\n    return (\n        <Component\n            className={classNames('link', className, { 'link--secondary': secondary })}\n            rel={relValue}\n            href={isAnchor ? href : undefined}\n            to={!isAnchor ? href : undefined}\n            target={targetValue}\n            onMouseUp={blurOnMouseUp}\n            {...rest}\n        >\n            {children}\n        </Component>\n    )\n}\n\nexport default Link\n","import { useState, useEffect, useRef, useCallback, Fragment } from 'react'\nimport classNames from 'classnames'\nimport { usePrefersReducedMotion, useInViewport } from 'hooks'\nimport { Button } from 'components/Button'\nimport Icon from 'components/Icon'\nimport { Transition } from 'react-transition-group'\nimport { reflow } from 'utils/transition'\nimport prerender from 'utils/prerender'\nimport { tokens } from 'components/ThemeProvider/theme'\nimport { msToNum, numToMs } from 'utils/style'\nimport { resolveVideoSrcFromSrcSet } from 'utils/image'\nimport { useTheme } from 'components/ThemeProvider'\nimport VisuallyHidden from 'components/VisuallyHidden'\nimport './index.css'\n\nconst Image = ({ className, style, reveal, delay = 0, raised, src, ...rest }) => {\n    const [loaded, setLoaded] = useState(false)\n    const { themeId } = useTheme()\n    const containerRef = useRef()\n    const inViewport = useInViewport(containerRef, !src?.endsWith('.mp4'))\n\n    const onLoad = useCallback(() => {\n        setLoaded(true)\n    }, [])\n\n    return (\n        <div\n            className={classNames('image', className, `image--${themeId}`, {\n                'image--in-viewport': inViewport,\n                'image--reveal': reveal,\n                'image--raised': raised,\n            })}\n            style={{ ...style, '--delay': numToMs(delay) }}\n            ref={containerRef}\n        >\n            <ImageElements\n                delay={delay}\n                onLoad={onLoad}\n                loaded={loaded}\n                inViewport={inViewport}\n                reveal={reveal}\n                src={src}\n                {...rest}\n            />\n        </div>\n    )\n}\n\nconst ImageElements = ({\n    onLoad,\n    loaded,\n    inViewport,\n    srcSet,\n    placeholder,\n    delay,\n    src,\n    alt,\n    play = true,\n    reveal,\n    ...rest\n}) => {\n    const prefersReducedMotion = usePrefersReducedMotion()\n    const [showPlaceholder, setShowPlaceholder] = useState(true)\n    const [playing, setPlaying] = useState(!prefersReducedMotion)\n    const [showPlayButton, setShowPlayButton] = useState(false)\n    const [isHovered, setIsHovered] = useState(false)\n    const [isFocused, setIsFocused] = useState(false)\n    const [placeholderSize, setPlaceholderSize] = useState()\n    const [videoSrc, setVideoSrc] = useState()\n    const placeholderRef = useRef()\n    const videoRef = useRef()\n    const isVideo = src?.endsWith('.mp4')\n    const imgSrc = src || srcSet?.split(' ')[0]\n    const showFullRes = !prerender && inViewport\n\n    useEffect(() => {\n        const purgePlaceholder = () => {\n            setShowPlaceholder(false)\n        }\n\n        const placeholderElement = placeholderRef.current\n        placeholderElement.addEventListener('transitionend', purgePlaceholder)\n\n        return function cleanUp() {\n            if (placeholderElement) {\n                placeholderElement.removeEventListener('transitionend', purgePlaceholder)\n            }\n        }\n    }, [])\n\n    useEffect(() => {\n        const resolveVideoSrc = async () => {\n            const resolvedVideoSrc = await resolveVideoSrcFromSrcSet(srcSet)\n            setVideoSrc(resolvedVideoSrc)\n        }\n\n        if (isVideo && srcSet) {\n            resolveVideoSrc()\n        } else if (isVideo) {\n            setVideoSrc(src)\n        }\n    }, [isVideo, src, srcSet])\n\n    useEffect(() => {\n        const { width, height } = placeholderRef.current\n\n        if (width && height) {\n            setPlaceholderSize({ width, height })\n        }\n    }, [])\n\n    useEffect(() => {\n        if (!videoRef.current || !videoSrc) return\n\n        if (!play || !inViewport) {\n            setPlaying(false)\n            videoRef.current.pause()\n        } else if (inViewport && !prefersReducedMotion && !prerender) {\n            setPlaying(true)\n            videoRef.current.play()\n        }\n    }, [inViewport, play, prefersReducedMotion, videoSrc])\n\n    const handlePlaceholderLoad = event => {\n        const { width, height } = event.target\n        setPlaceholderSize({ width, height })\n    }\n\n    const togglePlaying = event => {\n        event.preventDefault()\n\n        if (videoRef.current.paused) {\n            setPlaying(true)\n            videoRef.current.play()\n        } else {\n            setPlaying(false)\n            videoRef.current.pause()\n        }\n    }\n\n    const handleShowPlayButton = () => {\n        setShowPlayButton(true)\n        setIsHovered(true)\n    }\n\n    const handleFocusPlayButton = () => {\n        setShowPlayButton(true)\n        setIsFocused(true)\n    }\n\n    return (\n        <div\n            className={classNames('image__element-wrapper', {\n                'image__element-wrapper--reveal': reveal,\n                'image__element-wrapper--in-viewport': inViewport,\n            })}\n            onMouseOver={isVideo ? handleShowPlayButton : undefined}\n            onMouseOut={isVideo ? () => setIsHovered(false) : undefined}\n            style={{ '--delay': numToMs(delay + 1000) }}\n        >\n            {isVideo && (\n                <Fragment>\n                    <video\n                        muted\n                        loop\n                        playsInline\n                        className={classNames('image__element', {\n                            'image__element--loaded': loaded,\n                        })}\n                        autoPlay={!prefersReducedMotion}\n                        role=\"img\"\n                        onLoadStart={onLoad}\n                        src={videoSrc}\n                        aria-label={alt}\n                        ref={videoRef}\n                        {...rest}\n                    />\n                    <Transition\n                        in={isHovered || isFocused}\n                        onExit={reflow}\n                        onExited={() => setShowPlayButton(false)}\n                        timeout={{ enter: 0, exit: msToNum(tokens.base.durationS) }}\n                    >\n                        {status => (\n                            <VisuallyHidden visible={showPlayButton}>\n                                <Button\n                                    className={classNames(\n                                        'image__button',\n                                        `image__button--${status}`\n                                    )}\n                                    onFocus={handleFocusPlayButton}\n                                    onBlur={() => setIsFocused(false)}\n                                    onClick={togglePlaying}\n                                >\n                                    <Icon icon={playing ? 'pause' : 'play'} />\n                                    {playing ? 'Pause' : 'Play'}\n                                </Button>\n                            </VisuallyHidden>\n                        )}\n                    </Transition>\n                </Fragment>\n            )}\n            {!isVideo && (\n                <img\n                    className={classNames('image__element', {\n                        'image__element--loaded': loaded,\n                    })}\n                    onLoad={onLoad}\n                    decoding=\"async\"\n                    src={showFullRes ? imgSrc : undefined}\n                    srcSet={showFullRes ? srcSet : undefined}\n                    width={placeholderSize?.width}\n                    height={placeholderSize?.height}\n                    alt={alt}\n                    {...rest}\n                />\n            )}\n            {showPlaceholder && (\n                <img\n                    aria-hidden\n                    className={classNames('image__placeholder', {\n                        'image__placeholder--loaded': loaded,\n                    })}\n                    style={{ '--delay': numToMs(delay) }}\n                    ref={placeholderRef}\n                    src={placeholder}\n                    onLoad={handlePlaceholderLoad}\n                    width={placeholderSize?.width}\n                    height={placeholderSize?.height}\n                    decoding=\"async\"\n                    alt=\"\"\n                    role=\"presentation\"\n                />\n            )}\n        </div>\n    )\n}\n\nexport default Image\n","import Link from 'components/Link'\nimport './index.css'\n\nconst Footer = () => (\n    <footer className=\"footer\">\n        <span className=\"footer__date\">\n            {`© ${new Date().getFullYear()} 上海大学.`}\n        </span>\n        <Link secondary className=\"footer__link\" href=\"/humans.txt\" target=\"_self\">\n            Crafted by yours truly\n        </Link>\n    </footer>\n)\n\nexport default Footer\n","/**\n * Clean up a scene's materials and geometry\n */\nexport const cleanScene = scene => {\n    scene.traverse(object => {\n        if (!object.isMesh) return\n\n        object.geometry.dispose()\n\n        if (object.material.isMaterial) {\n            cleanMaterial(object.material)\n        } else {\n            for (const material of object.material) {\n                cleanMaterial(material)\n            }\n        }\n    })\n}\n\n/**\n * Clean up and dispose of a material\n */\nexport const cleanMaterial = material => {\n    material.dispose()\n\n    for (const key of Object.keys(material)) {\n        const value = material[key]\n        if (value && typeof value === 'object' && 'minFilter' in value) {\n            value.dispose()\n        }\n    }\n}\n\n/**\n * Clean up and dispose of a renderer\n */\nexport const cleanRenderer = renderer => {\n    renderer.dispose()\n    renderer.forceContextLoss()\n    renderer = null\n}\n\n/**\n * Clean up lights by removing them from their parent\n */\nexport const removeLights = lights => {\n    for (const light of lights) {\n        light.parent.remove(light)\n    }\n}\n","var _path;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport * as React from \"react\";\n\nfunction SvgArrowDown({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    stroke: \"currentColor\",\n    width: 43,\n    height: 15,\n    viewBox: \"0 0 43 15\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1 1l20.5 12L42 1\",\n    strokeWidth: 2,\n    fill: \"none\"\n  })));\n}\n\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgArrowDown);\nexport default __webpack_public_path__ + \"static/media/arrow-down.fa92c5d4.svg\";\nexport { ForwardRef as ReactComponent };","import { Suspense, lazy, useEffect, useState, Fragment } from 'react'\nimport classNames from 'classnames'\nimport { TransitionGroup, Transition } from 'react-transition-group'\nimport DecoderText from 'components/DecoderText'\nimport { useInterval, usePrevious, useWindowSize } from 'hooks'\nimport { reflow } from 'utils/transition'\nimport prerender from 'utils/prerender'\nimport { media } from 'utils/style'\nimport { ReactComponent as ArrowDown } from 'assets/arrow-down.svg'\nimport { tokens } from 'components/ThemeProvider/theme'\nimport Heading from 'components/Heading'\nimport Section from 'components/Section'\nimport { useTheme } from 'components/ThemeProvider'\nimport VisuallyHidden from 'components/VisuallyHidden'\nimport './Intro.css'\n\nconst DisplacementSphere = lazy(() => import('pages/Home/DisplacementSphere'))\n\nfunction Intro({ id, sectionRef, disciplines, scrollIndicatorHidden, ...rest }) {\n    const theme = useTheme()\n    const [disciplineIndex, setDisciplineIndex] = useState(0)\n    const windowSize = useWindowSize()\n    const prevTheme = usePrevious(theme)\n    const introLabel = [\n        disciplines.slice(0, -1).join(', '),\n        disciplines.slice(-1)[0],\n    ].join(', and ')\n    const currentDisciplines = disciplines.filter(\n        (item, index) => index === disciplineIndex\n    )\n    const titleId = `${id}-title`\n\n    useInterval(\n        () => {\n            const index = (disciplineIndex + 1) % disciplines.length\n            setDisciplineIndex(index)\n        },\n        5000,\n        theme.themeId\n    )\n\n    useEffect(() => {\n        if (prevTheme && prevTheme.themeId !== theme.themeId) {\n            setDisciplineIndex(0)\n        }\n    }, [theme.themeId, prevTheme])\n\n    return (\n        <Section\n            className=\"intro\"\n            as=\"section\"\n            ref={sectionRef}\n            id={id}\n            aria-labelledby={titleId}\n            tabIndex={-1}\n            {...rest}\n        >\n            <Transition\n                key={theme.themeId}\n                appear={!prerender}\n                in={!prerender}\n                timeout={3000}\n                onEnter={reflow}\n            >\n                {status => (\n                    <Fragment>\n                        {!prerender && (\n                            <Suspense fallback={null}>\n                                <DisplacementSphere />\n                            </Suspense>\n                        )}\n                        <header className=\"intro__text\">\n                            <h1\n                                className={classNames(\n                                    'intro__name',\n                                    `intro__name--${status}`\n                                )}\n                                id={titleId}\n                            >\n                                <DecoderText\n                                    text=\" 上海大学 · 上海美术学院\"\n                                    start={!prerender}\n                                    delay={300}\n                                />\n                            </h1>\n                            <Heading level={0} as=\"h2\" className=\"intro__title\">\n                                <VisuallyHidden className=\"intro__title-label\">{`Designer + ${introLabel}`}</VisuallyHidden>\n                                <span\n                                    aria-hidden\n                                    className={classNames('intro__title-row', {\n                                        'intro__title-row--hidden': prerender,\n                                    })}\n                                >\n                                    <span\n                                        className={classNames(\n                                            'intro__title-word',\n                                            `intro__title-word--${status}`\n                                        )}\n                                        style={{ '--delay': tokens.base.durationXS}}\n                                    >\n                                        METAPARK  <br></br>数幻游园\n                                    </span>\n                                    <span\n                                        classNameperppplllsss={classNames(\n                                            'intro__title-line',\n                                            `intro__title-line--${status}`\n                                        )}\n                                    />\n                                </span>\n                                <TransitionGroup\n                                    className={classNames('intro__title-row', {\n                                        'intro__title-row--hidden': prerender,\n                                    })}\n                                    component=\"span\"\n                                >\n                                    {currentDisciplines.map(item => (\n                                        <Transition\n                                            appear\n                                            timeout={{ enter: 3000, exit: 2000 }}\n                                            key={item}\n                                            onEnter={reflow}\n                                        >\n                                            {wordStatus => (\n                                                <span\n                                                    aria-hidden\n                                                    className={classNames(\n                                                        'intro__title-word',\n                                                        'intro__title-word--plus',\n                                                        `intro__title-word--${wordStatus}`\n                                                    )}\n                                                    style={{\n                                                        '--delay': tokens.base.durationL,\n                                                    }}\n                                                >\n                                                    {item}\n                                                </span>\n                                            )}\n                                        </Transition>\n                                    ))}\n                                </TransitionGroup>\n                            </Heading>\n                        </header>\n                        {windowSize.width > media.tablet && (\n                            <div\n                                className={classNames(\n                                    'intro__scroll-indicator',\n                                    `intro__scroll-indicator--${status}`,\n                                    {\n                                        'intro__scroll-indicator--hidden': scrollIndicatorHidden,\n                                    }\n                                )}\n                                status={status}\n                            />\n                        )}\n                        {windowSize.width <= media.tablet && (\n                            <div\n                                className={classNames(\n                                    'intro__mobile-scroll-indicator',\n                                    `intro__mobile-scroll-indicator--${status}`,\n                                    {\n                                        'intro__mobile-scroll-indicator--hidden': scrollIndicatorHidden,\n                                    }\n                                )}\n                            >\n                                <ArrowDown aria-hidden />\n                            </div>\n                        )}\n                    </Fragment>\n                )}\n            </Transition>\n        </Section>\n    )\n}\n\nexport default Intro\n","export default __webpack_public_path__ + \"static/media/iphone-11.dfa3acae.glb\";","export default __webpack_public_path__ + \"static/media/macbook-pro.29527f3f.glb\";","import iphone11 from 'assets/iphone-11.glb'\nimport macbookPro from 'assets/macbook-pro.glb'\n\nexport const ModelAnimationType = {\n    SpringUp: 'spring-up',\n    LaptopOpen: 'laptop-open',\n}\n\nconst models = {\n    phone: {\n        url: iphone11,\n        width: 374,\n        height: 512,\n        position: { x: 0, y: 0, z: 0 },\n        animation: ModelAnimationType.SpringUp,\n    },\n    laptop: {\n        url: macbookPro,\n        width: 1280,\n        height: 800,\n        position: { x: 0, y: 0, z: 0 },\n        animation: ModelAnimationType.LaptopOpen,\n    },\n}\n\nexport default models\n","import { useEffect, useCallback, useRef, useState } from 'react'\nimport classNames from 'classnames'\nimport {\n    sRGBEncoding,\n    LinearFilter,\n    Color,\n    TextureLoader,\n    Vector3,\n    MathUtils,\n    Group,\n    AmbientLight,\n    DirectionalLight,\n    WebGLRenderer,\n    PerspectiveCamera,\n    Scene,\n    WebGLRenderTarget,\n    PlaneBufferGeometry,\n    MeshBasicMaterial,\n    Mesh,\n    OrthographicCamera,\n    MeshDepthMaterial,\n    ShaderMaterial,\n} from 'three'\nimport { HorizontalBlurShader } from 'three/examples/jsm/shaders/HorizontalBlurShader.js'\nimport { VerticalBlurShader } from 'three/examples/jsm/shaders/VerticalBlurShader.js'\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader.js'\nimport { delay, chain, spring, value } from 'popmotion'\nimport { getImageFromSrcSet } from 'utils/image'\nimport { useInViewport, usePrefersReducedMotion } from 'hooks'\nimport { cleanScene, cleanRenderer, removeLights } from 'utils/three'\nimport { ModelAnimationType } from './deviceModels'\nimport { numToMs } from 'utils/style'\nimport './index.css'\n\nconst MeshType = {\n    Frame: 'Frame',\n    Logo: 'Logo',\n    Screen: 'Screen',\n}\n\nconst Model = ({\n    models,\n    show = true,\n    showDelay = 0,\n    cameraPosition = { x: 0, y: 0, z: 8 },\n    enableControls,\n    style,\n    className,\n    alt,\n    ...rest\n}) => {\n    const [modelData, setModelData] = useState()\n    const [loaded, setLoaded] = useState(false)\n    const container = useRef()\n    const canvas = useRef()\n    const camera = useRef()\n    const textureLoader = useRef()\n    const modelLoader = useRef()\n    const modelGroup = useRef()\n    const scene = useRef()\n    const renderer = useRef()\n    const shadowGroup = useRef()\n    const renderTarget = useRef()\n    const renderTargetBlur = useRef()\n    const shadowCamera = useRef()\n    const depthMaterial = useRef()\n    const horizontalBlurMaterial = useRef()\n    const verticalBlurMaterial = useRef()\n    const plane = useRef()\n    const lights = useRef()\n    const blurPlane = useRef()\n    const fillPlane = useRef()\n    const isInViewport = useInViewport(container, false, { threshold: 0.4 })\n    const reduceMotion = usePrefersReducedMotion()\n\n    useEffect(() => {\n        const { clientWidth, clientHeight } = container.current\n\n        renderer.current = new WebGLRenderer({\n            canvas: canvas.current,\n            alpha: true,\n            antialias: false,\n            powerPreference: 'high-performance',\n        })\n\n        renderer.current.setPixelRatio(2)\n        renderer.current.setSize(clientWidth, clientHeight)\n        renderer.current.outputEncoding = sRGBEncoding\n        renderer.current.physicallyCorrectLights = true\n\n        camera.current = new PerspectiveCamera(36, clientWidth / clientHeight, 0.1, 100)\n        camera.current.position.set(cameraPosition.x, cameraPosition.y, cameraPosition.z)\n        scene.current = new Scene()\n\n        textureLoader.current = new TextureLoader()\n        modelLoader.current = new GLTFLoader()\n        modelGroup.current = new Group()\n\n        // Lighting\n        const ambientLight = new AmbientLight(0xffffff, 1.2)\n        const keyLight = new DirectionalLight(0xffffff, 1.1)\n        const fillLight = new DirectionalLight(0xffffff, 0.8)\n\n        fillLight.position.set(-6, 2, 2)\n        keyLight.position.set(0.5, 0, 0.866)\n        lights.current = [ambientLight, keyLight, fillLight]\n        lights.current.forEach(light => scene.current.add(light))\n\n        // The shadow container, if you need to move the plane just move this\n        shadowGroup.current = new Group()\n        scene.current.add(shadowGroup.current)\n        shadowGroup.current.position.set(0, 0, -0.8)\n        shadowGroup.current.rotateX(Math.PI / 2)\n\n        const renderTargetSize = 512\n        const planeWidth = 8\n        const planeHeight = 8\n        const cameraHeight = 1.5\n        const shadowOpacity = 0.8\n        const shadowDarkness = 3\n\n        // The render target that will show the shadows in the plane texture\n        renderTarget.current = new WebGLRenderTarget(renderTargetSize, renderTargetSize)\n        renderTarget.current.texture.generateMipmaps = false\n\n        // The render target that we will use to blur the first render target\n        renderTargetBlur.current = new WebGLRenderTarget(\n            renderTargetSize,\n            renderTargetSize\n        )\n        renderTargetBlur.current.texture.generateMipmaps = false\n\n        // Make a plane and make it face up\n        const planeGeometry = new PlaneBufferGeometry(planeWidth, planeHeight).rotateX(\n            Math.PI / 2\n        )\n\n        const planeMaterial = new MeshBasicMaterial({\n            map: renderTarget.current.texture,\n            opacity: shadowOpacity,\n            transparent: true,\n        })\n\n        plane.current = new Mesh(planeGeometry, planeMaterial)\n        // The y from the texture is flipped!\n        plane.current.scale.y = -1\n        shadowGroup.current.add(plane.current)\n\n        // The plane onto which to blur the texture\n        blurPlane.current = new Mesh(planeGeometry)\n        blurPlane.current.visible = false\n        shadowGroup.current.add(blurPlane.current)\n\n        // The plane with the color of the ground\n        const fillMaterial = new MeshBasicMaterial({\n            color: 0xffffff,\n            opacity: 0,\n            transparent: true,\n        })\n\n        fillPlane.current = new Mesh(planeGeometry, fillMaterial)\n        fillPlane.current.rotateX(Math.PI)\n        fillPlane.current.position.y -= 0.00001\n        shadowGroup.current.add(fillPlane.current)\n\n        // The camera to render the depth material from\n        shadowCamera.current = new OrthographicCamera(\n            -planeWidth / 2,\n            planeWidth / 2,\n            planeHeight / 2,\n            -planeHeight / 2,\n            0,\n            cameraHeight\n        )\n        // Get the camera to look up\n        shadowCamera.current.rotation.x = Math.PI / 2\n        shadowGroup.current.add(shadowCamera.current)\n\n        // Like MeshDepthMaterial, but goes from black to transparent\n        depthMaterial.current = new MeshDepthMaterial()\n        depthMaterial.current.userData.darkness = { value: shadowDarkness }\n        depthMaterial.current.onBeforeCompile = shader => {\n            shader.uniforms.darkness = depthMaterial.current.userData.darkness\n            shader.fragmentShader = `\n        uniform float darkness;\n        ${shader.fragmentShader.replace(\n            'gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );',\n            'gl_FragColor = vec4( vec3( 0.0 ), ( 1.0 - fragCoordZ ) * darkness );'\n        )}\n      `\n        }\n        depthMaterial.current.depthTest = false\n        depthMaterial.current.depthWrite = false\n\n        horizontalBlurMaterial.current = new ShaderMaterial(HorizontalBlurShader)\n        horizontalBlurMaterial.current.depthTest = false\n\n        verticalBlurMaterial.current = new ShaderMaterial(VerticalBlurShader)\n        verticalBlurMaterial.current.depthTest = false\n\n        const applyScreenTexture = async (texture, node) => {\n            texture.encoding = sRGBEncoding\n            texture.minFilter = LinearFilter\n            texture.magFilter = LinearFilter\n            texture.flipY = false\n            texture.anisotropy = renderer.current.capabilities.getMaxAnisotropy()\n            texture.generateMipmaps = false\n\n            // Decode the texture to prevent jank on first render\n            await renderer.current.initTexture(texture)\n\n            node.material.color = new Color(0xffffff)\n            node.material.transparent = false\n            node.material.map = texture\n        }\n\n        // Build an array of promises to fetch and apply models & animations\n        const modelConfigPromises = models.map(async (model, index) => {\n            const { texture, position, url } = model\n            let loadFullResTexture\n\n            const [gltf, placeholder] = await Promise.all([\n                await modelLoader.current.loadAsync(url),\n                await textureLoader.current.loadAsync(texture.placeholder),\n            ])\n\n            gltf.scene.traverse(async node => {\n                if (node.material) {\n                    node.material.color = new Color(0x1f2025)\n                    node.material.color.convertSRGBToLinear()\n                }\n\n                if (node.name === MeshType.Screen) {\n                    applyScreenTexture(placeholder, node)\n                    loadFullResTexture = async () => {\n                        const image = await getImageFromSrcSet(texture)\n                        const fullSize = await textureLoader.current.loadAsync(image)\n                        await applyScreenTexture(fullSize, node)\n                    }\n                }\n            })\n\n            modelGroup.current.add(gltf.scene)\n\n            const animation = getModelAnimation({\n                model,\n                gltf,\n                position,\n                reduceMotion,\n                renderFrame,\n                index,\n                showDelay,\n            })\n\n            return { ...animation, loadFullResTexture }\n        })\n\n        setModelData(modelConfigPromises)\n\n        return () => {\n            removeLights(lights.current)\n            cleanScene(scene.current)\n            cleanRenderer(renderer.current)\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    const blurShadow = useCallback(amount => {\n        blurPlane.current.visible = true\n\n        // Blur horizontally and draw in the renderTargetBlur\n        blurPlane.current.material = horizontalBlurMaterial.current\n        blurPlane.current.material.uniforms.tDiffuse.value = renderTarget.current.texture\n        horizontalBlurMaterial.current.uniforms.h.value = amount * (1 / 256)\n\n        renderer.current.setRenderTarget(renderTargetBlur.current)\n        renderer.current.render(blurPlane.current, shadowCamera.current)\n\n        // Blur vertically and draw in the main renderTarget\n        blurPlane.current.material = verticalBlurMaterial.current\n        blurPlane.current.material.uniforms.tDiffuse.value =\n            renderTargetBlur.current.texture\n        verticalBlurMaterial.current.uniforms.v.value = amount * (1 / 256)\n\n        renderer.current.setRenderTarget(renderTarget.current)\n        renderer.current.render(blurPlane.current, shadowCamera.current)\n\n        blurPlane.current.visible = false\n    }, [])\n\n    // Handle render passes for a single frame\n    const renderFrame = useCallback(() => {\n        const blurAmount = 5\n\n        // Remove the background\n        const initialBackground = scene.current.background\n        scene.current.background = null\n\n        // Force the depthMaterial to everything\n        // cameraHelper.visible = false;\n        scene.current.overrideMaterial = depthMaterial.current\n\n        // Render to the render target to get the depths\n        renderer.current.setRenderTarget(renderTarget.current)\n        renderer.current.render(scene.current, shadowCamera.current)\n\n        // And reset the override material\n        scene.current.overrideMaterial = null\n\n        blurShadow(blurAmount)\n\n        // A second pass to reduce the artifacts\n        // (0.4 is the minimum blur amout so that the artifacts are gone)\n        blurShadow(blurAmount * 0.4)\n\n        // Reset and render the normal scene\n        renderer.current.setRenderTarget(null)\n        scene.current.background = initialBackground\n\n        renderer.current.render(scene.current, camera.current)\n    }, [blurShadow])\n\n    useEffect(() => {\n        let introSprings = []\n\n        if (!modelData) return\n\n        scene.current.add(modelGroup.current)\n\n        const loadScene = async () => {\n            const loadedModels = await Promise.all(modelData)\n\n            setLoaded(true)\n\n            const handleModelLoad = loadedModels.map(async model => {\n                // Start animation\n                if (model.animation) {\n                    const modelAnimation = model.animation.start(model.modelValue)\n                    introSprings.push(modelAnimation)\n                }\n\n                if (reduceMotion) {\n                    renderFrame()\n                }\n\n                // Load full res screen texture\n                await model.loadFullResTexture()\n\n                // Render the loaded texture\n                if (reduceMotion) {\n                    renderFrame()\n                }\n            })\n\n            await Promise.all(handleModelLoad)\n        }\n\n        if (show) {\n            loadScene()\n        }\n\n        return () => {\n            for (const spring of introSprings) {\n                spring.stop()\n            }\n        }\n    }, [modelData, reduceMotion, renderFrame, show])\n\n    // Handle mouse move animation\n    useEffect(() => {\n        let rotationSpring\n        let rotationSpringValue\n\n        const onMouseMove = event => {\n            const { rotation } = modelGroup.current\n            const { innerWidth, innerHeight } = window\n\n            const position = {\n                x: (event.clientX - innerWidth / 2) / innerWidth,\n                y: (event.clientY - innerHeight / 2) / innerHeight,\n            }\n\n            if (!rotationSpringValue) {\n                rotationSpringValue = value(\n                    { x: rotation.x, y: rotation.y },\n                    ({ x, y }) => {\n                        rotation.set(x, y, rotation.z)\n                        renderFrame()\n                    }\n                )\n            }\n\n            rotationSpring = spring({\n                from: rotationSpringValue.get(),\n                to: { x: position.y / 2, y: position.x / 2 },\n                stiffness: 40,\n                damping: 40,\n                velocity: rotationSpringValue.getVelocity(),\n                restSpeed: 0.00001,\n                mass: 1.4,\n            }).start(rotationSpringValue)\n        }\n\n        if (isInViewport && !reduceMotion) {\n            window.addEventListener('mousemove', onMouseMove)\n        }\n\n        return () => {\n            window.removeEventListener('mousemove', onMouseMove)\n            rotationSpring?.stop()\n        }\n    }, [isInViewport, reduceMotion, renderFrame])\n\n    // Handle window resize\n    useEffect(() => {\n        const handleResize = () => {\n            if (!container.current) return\n\n            const { clientWidth, clientHeight } = container.current\n\n            renderer.current.setSize(clientWidth, clientHeight)\n            camera.current.aspect = clientWidth / clientHeight\n            camera.current.updateProjectionMatrix()\n\n            renderFrame()\n        }\n\n        window.addEventListener('resize', handleResize)\n        handleResize()\n\n        return () => {\n            window.removeEventListener('resize', handleResize)\n        }\n    }, [renderFrame])\n\n    return (\n        <div\n            className={classNames('model', { 'model--loaded': loaded }, className)}\n            style={{ '--delay': numToMs(showDelay), ...style }}\n            ref={container}\n            role=\"img\"\n            aria-label={alt}\n            {...rest}\n        >\n            <canvas className=\"model__canvas\" ref={canvas} />\n        </div>\n    )\n}\n\n// Get custom model animation\nfunction getModelAnimation({ model, gltf, reduceMotion, renderFrame, index, showDelay }) {\n    const positionVector = new Vector3(\n        model.position.x,\n        model.position.y,\n        model.position.z\n    )\n\n    if (reduceMotion) {\n        gltf.scene.position.set(...positionVector.toArray())\n        return\n    }\n\n    // Simple slide up animation\n    if (model.animation === ModelAnimationType.SpringUp) {\n        const startPosition = new Vector3(\n            positionVector.x,\n            positionVector.y - 1,\n            positionVector.z\n        )\n        const endPosition = positionVector\n\n        gltf.scene.position.set(...startPosition.toArray())\n\n        const modelValue = value(gltf.scene.position, ({ x, y, z }) => {\n            gltf.scene.position.set(x, y, z)\n            renderFrame()\n        })\n\n        const animation = chain(\n            delay(300 * index + showDelay * 0.6),\n            spring({\n                from: startPosition,\n                to: endPosition,\n                stiffness: 60,\n                damping: 16,\n                restSpeed: 0.001,\n            })\n        )\n\n        return { animation, modelValue }\n    }\n\n    // Laptop open animation\n    if (model.animation === ModelAnimationType.LaptopOpen) {\n        const frameNode = gltf.scene.children.find(node => node.name === MeshType.Frame)\n        const startRotation = new Vector3(MathUtils.degToRad(90), 0, 0)\n        const endRotation = new Vector3(0, 0, 0)\n\n        gltf.scene.position.set(...positionVector.toArray())\n        frameNode.rotation.set(...startRotation.toArray())\n\n        const modelValue = value(frameNode.rotation, ({ x, y, z }) => {\n            frameNode.rotation.set(x, y, z)\n            renderFrame()\n        })\n\n        const animation = chain(\n            delay(300 * index + showDelay + 200),\n            spring({\n                from: startRotation,\n                to: endRotation,\n                stiffness: 50,\n                damping: 14,\n                restSpeed: 0.001,\n            })\n        )\n\n        return { animation, modelValue }\n    }\n}\n\nexport default Model\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport * as React from \"react\";\n\nfunction SvgKatakanaProject({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    \"aria-hidden\": \"true\",\n    fill: \"currentColor\",\n    width: 750,\n    height: 137,\n    viewBox: \"0 0 750 137\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props));\n}\n\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgKatakanaProject);\nexport default __webpack_public_path__ + \"static/media/katakana-project.36634356.svg\";\nexport { ForwardRef as ReactComponent };","import { Fragment } from 'react'\nimport classNames from 'classnames'\nimport { Transition } from 'react-transition-group'\nimport Section from 'components/Section'\nimport { Button } from 'components/Button'\nimport Model from 'components/Model'\nimport Divider from 'components/Divider'\nimport { useWindowSize } from 'hooks'\nimport { reflow, isVisible } from 'utils/transition'\nimport { media } from 'utils/style'\nimport { ReactComponent as KatakanaProject } from 'assets/katakana-project.svg'\nimport deviceModels from 'components/Model/deviceModels'\nimport Heading from 'components/Heading'\nimport Text from 'components/Text'\nimport { useTheme } from 'components/ThemeProvider'\nimport './ProjectSummary.css'\n\nconst ProjectSummary = ({\n    id,\n    visible,\n    sectionRef,\n    index,\n    title,\n    description,\n    model,\n    buttonText,\n    buttonLink,\n    alternate,\n    externalLink,\n    isExternal,\n    ...rest\n}) => {\n    const theme = useTheme()\n    const { width } = useWindowSize()\n    const titleId = `${id}-title`\n    const isMobile = width <= media.tablet\n    const svgOpacity = theme.themeId === 'light' ? 0.7 : 1\n    const indexText = index < 10 ? `0${index}` : index\n    const phoneSizes = `(max-width: ${media.tablet}px) 30vw, 20vw`\n    const laptopSizes = `(max-width: ${media.tablet}px) 80vw, 40vw`\n\n\n    const renderDetails = status => (\n        <div className=\"project-summary__details\">\n            <div aria-hidden className=\"project-summary__index\">\n                <Divider\n                    notchWidth=\"64px\"\n                    notchHeight=\"8px\"\n                    collapsed={status !== 'entered'}\n                    collapseDelay={1000}\n                />\n                <span\n                    className={classNames(\n                        'project-summary__index-number',\n                        `project-summary__index-number--${status}`\n                    )}\n                >\n                    {indexText}\n                </span>\n            </div>\n            <Heading\n                level={3}\n                as=\"h2\"\n                className={classNames(\n                    'project-summary__title',\n                    `project-summary__title--${status}`\n                )}\n                id={titleId}\n            >\n                {title}\n            </Heading>\n            <Text\n                className={classNames(\n                    'project-summary__description',\n                    `project-summary__description--${status}`\n                )}\n            >\n                {description}\n            </Text>\n            <div\n                className={classNames(\n                    'project-summary__button',\n                    `project-summary__button--${status}`\n                )}\n            >\n                <Button iconHoverShift href={buttonLink} isExternal={isExternal} iconEnd=\"arrowRight\">\n                    {buttonText}\n                </Button>\n            </div>\n        </div>\n    )\n\n    const renderPreview = status => (\n        <div className=\"project-summary__preview\">\n            {model.type === 'laptop' && (\n                <Fragment>\n                    <KatakanaProject\n                        style={{ '--opacity': svgOpacity }}\n                        className={classNames(\n                            'project-summary__svg',\n                            'project-summary__svg--laptop',\n                            `project-summary__svg--${status}`,\n                            {\n                                'project-summary__svg--light': theme.themeId === 'light',\n                            }\n                        )}\n                    />\n                    <Model\n                        className={classNames(\n                            'project-summary__model',\n                            'project-summary__model--laptop'\n                        )}\n                        alt={model.alt}\n                        cameraPosition={{ x: 0, y: 0, z: 8 }}\n                        showDelay={800}\n                        show={isVisible(status)}\n                        models={[\n                            {\n                                ...deviceModels.laptop,\n                                texture: {\n                                    ...model.textures[0],\n                                    sizes: laptopSizes,\n                                },\n                            },\n                        ]}\n                    />\n                </Fragment>\n            )}\n            {model.type === 'phone' && (\n                <Fragment>\n                    <KatakanaProject\n                        style={{ '--opacity': svgOpacity }}\n                        className={classNames(\n                            'project-summary__svg',\n                            'project-summary__svg--phone',\n                            `project-summary__svg--${status}`,\n                            {\n                                'project-summary__svg--light': theme.themeId === 'light',\n                            }\n                        )}\n                    />\n                    <Model\n                        className={classNames(\n                            'project-summary__model',\n                            'project-summary__model--phone'\n                        )}\n                        alt={model.alt}\n                        cameraPosition={{ x: 0, y: 0, z: 11.5 }}\n                        showDelay={500}\n                        show={isVisible(status)}\n                        models={[\n                            {\n                                ...deviceModels.phone,\n                                position: { x: -0.6, y: 1.1, z: 0 },\n                                texture: {\n                                    ...model.textures[0],\n                                    sizes: phoneSizes,\n                                },\n                            },\n                            {\n                                ...deviceModels.phone,\n                                position: { x: 0.6, y: -0.5, z: 0.3 },\n                                texture: {\n                                    ...model.textures[1],\n                                    sizes: phoneSizes,\n                                },\n                            },\n                        ]}\n                    />\n                </Fragment>\n            )}\n        </div>\n    )\n\n    return (\n        <Section\n            className={classNames('project-summary', {\n                'project-summary--alternate': alternate,\n                'project-summary--first': index === '01',\n            })}\n            as=\"section\"\n            aria-labelledby={titleId}\n            ref={sectionRef}\n            id={id}\n            tabIndex={-1}\n            {...rest}\n        >\n            <div className=\"project-summary__content\">\n                <Transition in={visible} timeout={0} onEnter={reflow}>\n                    {status => (\n                        <Fragment>\n                            {!alternate && !isMobile && (\n                                <Fragment>\n                                    {renderDetails(status)}\n                                    {renderPreview(status)}\n                                </Fragment>\n                            )}\n                            {(alternate || isMobile) && (\n                                <Fragment>\n                                    {renderPreview(status)}\n                                    {renderDetails(status)}\n                                </Fragment>\n                            )}\n                        </Fragment>\n                    )}\n                </Transition>\n            </div>\n        </Section>\n    )\n}\n\nexport default ProjectSummary\n","export default __webpack_public_path__ + \"static/media/idea.84aeb346.jpg\";","import { Fragment } from 'react'\nimport classNames from 'classnames'\nimport { Transition } from 'react-transition-group'\nimport { Button } from 'components/Button'\nimport DecoderText from 'components/DecoderText'\nimport Divider from 'components/Divider'\nimport Image from 'components/Image'\nimport Section from 'components/Section'\nimport ProfileImg from 'assets/idea.jpg'\nimport { reflow } from 'utils/transition'\nimport { media } from 'utils/style'\nimport Heading from 'components/Heading'\nimport Text from 'components/Text'\nimport './Profile.css'\n\nconst ProfileText = ({ status, titleId }) => (\n    <Fragment>\n        <Heading\n            className={classNames('profile__title', `profile__title--${status}`)}\n            level={3}\n            id={titleId}\n        >\n            <DecoderText text=\"我们的理念\" start={status !== 'exited'} delay={500} />\n        </Heading>\n        <Text\n            className={classNames(\n                'profile__description',\n                `profile__description--${status}`\n            )}\n            size=\"m\"\n        >\n            随着后疫情时代的到来，数字原住民增加以及“宅文化”兴起，大量人群，\n            特别是青年群体中的学生党与上班族，迫工作与学习上的压力和对网络数字世界的沉迷，\n            几乎没有空闲时间去到线下公园内进行休闲放松。同时，疫情的反复爆发导致线下生活受到严重影响，\n            迫切需要能够以更加便捷安全的方式享受到城市公园中的自然绿意。\n            “Meta-park数幻游园”线上交互体验平台正是基于这样的时代背景，\n            通过技术与艺术相结合的手段，把城市中的老公园“搬进”数字空间里，\n            从而使人们随时随地都能够通过移动设备进入到“城市公园元宇宙”内进行放松、游玩与交友等活动。\n        </Text>\n        {/* <Text\n            className={classNames(\n                'profile__description',\n                `profile__description--${status}`\n            )}\n            size=\"l\"\n        >\n            In my spare time I like to play video games, watch anime. I’m always down for\n            hearing about new projects, so feel free to drop me a line.\n        </Text> */}\n    </Fragment>\n)\n\nconst Profile = ({ id, visible, sectionRef }) => {\n    const titleId = `${id}-title`\n\n    return (\n        <Section\n            className=\"profile\"\n            as=\"section\"\n            id={id}\n            ref={sectionRef}\n            aria-labelledby={titleId}\n            tabIndex={-1}\n        >\n            <Transition in={visible} timeout={0} onEnter={reflow}>\n                {status => (\n                    <div>\n                    <div className=\"profile__content\">\n                        <div className=\"profile__column\">\n                            <ProfileText status={status} titleId={titleId} />\n                            <Button\n                                secondary\n                                className={classNames(\n                                    'profile__button',\n                                    `profile__button--${status}`\n                                )}\n                                href=\"/contact\"\n                                icon=\"send\"\n                            >\n                                联系我们\n                            </Button>\n                        </div>\n                        <div className=\"profile__column\">\n                            <div className=\"profile__tag\" aria-hidden>\n                                <Divider\n                                    notchWidth=\"64px\"\n                                    notchHeight=\"8px\"\n                                    collapsed={status !== 'entered'}\n                                    collapseDelay={1000}\n                                />\n                                <div\n                                    className={classNames(\n                                        'profile__tag-text',\n                                        `profile__tag-text--${status}`\n                                    )}\n                                >\n                                    关于我们\n                                </div>\n                            </div>\n                            <div>\n                                <Text\n                                    className={classNames(\n                                        'profile__description',\n                                        `profile__description--${status}`\n                                    )}\n                                    size=\"m\"\n                                >\n                                    我们是来自上海大学的一支具有多元学科背景的创新研究型团队，\n                                    团队负责人为上海大学上海美术学院环境设计专业研究生，\n                                    核心成员分别来自上海美术学院、社会学院、管理学院、计算机工程与技术学院、通信与信息工程学院等，\n                                    我们的团队愿景是：让每一个人都能够在数字世界里畅想绿艺！\n                                </Text>\n                            </div>\n                        </div>\n                    </div>\n                    <div>\n                        <Image\n                            reveal\n                            delay={100}\n                            srcSet={`${ProfileImg} 480w, ${ProfileImg} 960w`}\n                            sizes={`(max-width: ${media.mobile}px) 100vw, 480px`}\n                            alt=\"To shy to upload my own picture hehehehehe\"\n                        />\n                    </div>\n                    </div>\n                )}\n            </Transition>\n        </Section>\n    )\n}\n\nexport default Profile\n","export default __webpack_public_path__ + \"static/media/parkmodel.acd863dd.jpg\";","import { useState, useEffect, useRef } from 'react'\nimport { Helmet } from 'react-helmet'\nimport Intro from 'pages/Home/Intro'\nimport ProjectSummary from 'pages/Home/ProjectSummary'\nimport Profile from 'pages/Home/Profile'\nimport Footer from 'components/Footer'\nimport { usePrefersReducedMotion, useRouteTransition } from 'hooks'\nimport { useLocation } from 'react-router-dom'\nimport iphone11 from 'assets/iphone-11.glb'\nimport macbookPro from 'assets/macbook-pro.glb'\n// import spotify_player from 'assets/spotify-player.jpg'\n// import spotify_player_placeholder from 'assets/spotify-player-blurred.jpg'\n// import player from 'assets/player.jpg'\n// import player_placeholder from 'assets/player-blurred.jpg'\nimport park_model from 'assets/parkmodel.jpg'\n// import chess from 'assets/chess-1.jpg'\n// import chess2 from 'assets/chess-2.jpg'\n// import chess_ph from 'assets/chess-1_blurred.jpg'\n// import chess2_ph from 'assets/chess-2_blurred.jpg'\n// import fubuki from 'assets/fubuki-npm-light.png'\n// import fubuki_ph from 'assets/fubuki-ph.jpg'\n// import contrib from 'assets/gh-contrib-terminal.png'\n// import contrib_ph from 'assets/gh-contrib_blurred.jpg'\n\nimport './index.css'\n\nconst disciplines = ['Digital', 'Greenness','Healthy']\n\nconst Home = () => {\n    const { status } = useRouteTransition()\n    const { hash, state } = useLocation()\n    const initHash = useRef(true)\n    const [visibleSections, setVisibleSections] = useState([])\n    const [scrollIndicatorHidden, setScrollIndicatorHidden] = useState(false)\n    const intro = useRef()\n    const projectOne = useRef()\n    // const projectTwo = useRef()\n    // const projectThree = useRef()\n    // const projectFour = useRef()\n    // const projectFive = useRef()\n    const details = useRef()\n    const prefersReducedMotion = usePrefersReducedMotion()\n\n    useEffect(() => {\n        const revealSections = [\n            intro,\n            projectOne,\n            //projectTwo,\n            //projectThree,\n            //projectFour,\n            //projectFive,\n            details,\n        ]\n\n        const sectionObserver = new IntersectionObserver(\n            (entries, observer) => {\n                entries.forEach(entry => {\n                    if (entry.isIntersecting) {\n                        const section = entry.target\n                        observer.unobserve(section)\n                        if (visibleSections.includes(section)) return\n                        setVisibleSections(prevSections => [...prevSections, section])\n                    }\n                })\n            },\n            { rootMargin: '0px 0px -10% 0px' }\n        )\n\n        const indicatorObserver = new IntersectionObserver(\n            ([entry]) => {\n                setScrollIndicatorHidden(!entry.isIntersecting)\n            },\n            { rootMargin: '-100% 0px 0px 0px' }\n        )\n\n        revealSections.forEach(section => {\n            sectionObserver.observe(section.current)\n        })\n\n        indicatorObserver.observe(intro.current)\n\n        return () => {\n            sectionObserver.disconnect()\n            indicatorObserver.disconnect()\n        }\n    }, [visibleSections])\n\n    useEffect(() => {\n        const hasEntered = status === 'entered'\n        const supportsNativeSmoothScroll =\n            'scrollBehavior' in document.documentElement.style\n        let scrollObserver\n        let scrollTimeout\n\n        const handleHashchange = (hash, scroll) => {\n            clearTimeout(scrollTimeout)\n            const hashSections = [intro, projectOne, details]\n            const hashString = hash.replace('#', '')\n            const element = hashSections.filter(item => item.current.id === hashString)[0]\n            if (!element) return\n            const behavior = scroll && !prefersReducedMotion ? 'smooth' : 'instant'\n            const top = element.current.offsetTop\n\n            scrollObserver = new IntersectionObserver(\n                (entries, observer) => {\n                    const [entry] = entries\n                    if (entry.isIntersecting) {\n                        scrollTimeout = setTimeout(\n                            () => {\n                                element.current.focus()\n                            },\n                            prefersReducedMotion ? 0 : 400\n                        )\n                        observer.unobserve(entry.target)\n                    }\n                },\n                { rootMargin: '-20% 0px -20% 0px' }\n            )\n\n            scrollObserver.observe(element.current)\n\n            if (supportsNativeSmoothScroll) {\n                window.scroll({\n                    top,\n                    left: 0,\n                    behavior,\n                })\n            } else {\n                window.scrollTo(0, top)\n            }\n        }\n\n        if (hash && initHash.current && hasEntered) {\n            handleHashchange(hash, false)\n            initHash.current = false\n        } else if (!hash && initHash.current && hasEntered) {\n            window.scrollTo(0, 0)\n            initHash.current = false\n        } else if (hasEntered) {\n            handleHashchange(hash, true)\n        }\n\n        return () => {\n            clearTimeout(scrollTimeout)\n            if (scrollObserver) {\n                scrollObserver.disconnect()\n            }\n        }\n    }, [hash, state, prefersReducedMotion, status])\n\n    return (\n        <div className=\"home\">\n            <Helmet>\n                <title>MetaPark | 数幻游园</title>\n                <meta\n                    name=\"description\"\n                    content=\"Portfolio of Alen Yohannan – a backend devloper working on node apps\"\n                />\n                <link rel=\"prefetch\" href={iphone11} as=\"fetch\" crossorigin=\"\" />\n                <link rel=\"prefetch\" href={macbookPro} as=\"fetch\" crossorigin=\"\" />\n            </Helmet>\n            <Intro\n                id=\"intro\"\n                sectionRef={intro}\n                disciplines={disciplines}\n                scrollIndicatorHidden={scrollIndicatorHidden}\n            />\n            <ProjectSummary\n                id=\"project-1\"\n                sectionRef={projectOne}\n                visible={visibleSections.includes(projectOne.current)}\n                index={1}\n                title=\"上海复兴公园元宇宙\"\n                description=\"Shanghai Fuxin Park in Metaverse\"\n                buttonText=\"查看详情\"\n                buttonLink=\"/park-model-page/model.html\"\n                isExternal={true}\n                model={{\n                    type: 'laptop',\n                    alt: 'Wa-Sticker-Formatter',\n                    textures: [\n                        {\n                            src: park_model,\n                            srcSet: `${park_model} 980w, ${park_model} 1376w`,\n                            placeholder: park_model,\n                        },\n                    ],\n                }}\n            />\n            {/* <ProjectSummary\n                id=\"project-2\"\n                alternate\n                sectionRef={projectTwo}\n                visible={visibleSections.includes(projectTwo.current)}\n                index={2}\n                title=\"Void\"\n                description=\"A WhatsApp bot which can be used to play chess & more!\"\n                buttonText=\"View Project\"\n                buttonLink=\"https://github.com/Synthesized-infinity/whatsapp-botto-void\"\n                model={{\n                    type: 'phone',\n                    alt: 'Spotifydl-Core',\n                    textures: [\n                        {\n                            src: chess,\n                            srcSet: `${chess} 254w, ${chess} 508w`,\n                            placeholder: chess_ph,\n                        },\n                        {\n                            src: chess2,\n                            srcSet: `${chess2} 254w, ${chess2} 508w`,\n                            placeholder: chess2_ph,\n                        },\n                    ],\n                }}\n            />\n            <ProjectSummary\n                id=\"project-3\"\n                sectionRef={projectThree}\n                visible={visibleSections.includes(projectThree.current)}\n                index={3}\n                title=\"Fubuki\"\n                description=\"Github GraphQL API Wraper\"\n                buttonText=\"View Project\"\n                buttonLink=\"https://github.com/alensaito1/fubuki\"\n                model={{\n                    type: 'laptop',\n                    alt: 'Fubuki',\n                    textures: [\n                        {\n                            src: fubuki,\n                            srcSet: `${fubuki} 800w, ${fubuki} 1440w`,\n                            placeholder: fubuki_ph,\n                        },\n                    ],\n                }}\n            />\n            <ProjectSummary\n                id=\"project-4\"\n                alternate\n                sectionRef={projectFour}\n                visible={visibleSections.includes(projectFour.current)}\n                index={4}\n                title=\"Spotifydl-Core\"\n                description=\"Spotify Downloader for NodeJS\"\n                buttonText=\"View Project\"\n                buttonLink=\"https://github.com/AlenSaito1/Spotifydl-Core\"\n                model={{\n                    type: 'phone',\n                    alt: 'Spotifydl-Core',\n                    textures: [\n                        {\n                            src: player,\n                            srcSet: `${player} 254w, ${player} 508w`,\n                            placeholder: player_placeholder,\n                        },\n                        {\n                            src: spotify_player,\n                            srcSet: `${spotify_player} 254w, ${spotify_player} 508w`,\n                            placeholder: spotify_player_placeholder,\n                        },\n                    ],\n                }}\n            />\n            <ProjectSummary\n                id=\"project-5\"\n                sectionRef={projectFive}\n                visible={visibleSections.includes(projectFive.current)}\n                index={5}\n                title=\"Next-Github\"\n                description=\"Github Dynamic Stats Generator & Contribution Visualizer\"\n                buttonText=\"View Project\"\n                buttonLink=\"https://github.com/alensaito1/next-github\"\n                model={{\n                    type: 'laptop',\n                    alt: 'Next-Github',\n                    textures: [\n                        {\n                            src: contrib,\n                            srcSet: `${contrib} 800w, ${contrib} 1440w`,\n                            placeholder: contrib_ph,\n                        },\n                    ],\n                }}\n            /> */}\n            <Profile\n                sectionRef={details}\n                visible={visibleSections.includes(details.current)}\n                id=\"details\"\n            />\n            <Footer />\n        </div>\n    )\n}\n\nexport default Home\n"],"sourceRoot":""}