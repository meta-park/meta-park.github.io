{"version":3,"sources":["assets/arrow-down.svg","pages/Home/Intro.js","assets/iphone-11.glb","assets/macbook-pro.glb","assets/vr-glasses.glb","components/Model/deviceModels.js","components/Model/index.js","assets/katakana-project.svg","pages/Home/ProjectSummary.js","assets/Chen.jpg","assets/Lu.jpg","assets/Jiang.jpg","assets/Yan.jpg","assets/Sun.jpg","pages/Home/Profile.js","assets/parkmodel.jpg","assets/chess-1.jpg","assets/chess-1_blurred.jpg","assets/02.jpg","assets/01.jpg","assets/03.jpg","assets/05.jpg","assets/04.jpg","assets/06.jpg","assets/07.jpg","assets/1.jpg","assets/08.jpg","assets/4.jpg","assets/2.jpg","assets/3.jpg","assets/8.jpg","assets/5.jpg","assets/6.jpg","assets/7.jpg","pages/Home/Carousel.js","pages/Home/index.js","assets/fonts/gotham-bold.woff2","components/Heading/index.js","components/Section/index.js","components/Text/index.js","components/DecoderText/index.js","utils/image.js","components/Link/index.js","components/Divider/index.js","components/Image/index.js","components/Footer/index.js","utils/three.js"],"names":["_path","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","SvgArrowDown","title","titleId","props","svgRef","stroke","width","height","viewBox","ref","id","d","strokeWidth","fill","ForwardRef","DisplacementSphere","lazy","Intro","sectionRef","disciplines","scrollIndicatorHidden","rest","theme","useTheme","disciplineIndex","setDisciplineIndex","useState","windowSize","useWindowSize","prevTheme","usePrevious","introLabel","slice","join","currentDisciplines","filter","item","index","useInterval","themeId","useEffect","Section","className","as","tabIndex","Transition","appear","prerender","in","timeout","onEnter","reflow","status","fallback","classNames","DecoderText","text","start","delay","Heading","level","VisuallyHidden","style","tokens","base","durationXS","classNameperppplllsss","TransitionGroup","component","map","enter","exit","wordStatus","durationL","src","allowfullscreen","scrolling","frameborder","sandbox","media","tablet","ModelAnimationType","models","phone","url","iphone11","position","x","y","z","animation","laptop","macbookPro","vr","MeshType","Model","show","showDelay","cameraPosition","enableControls","alt","modelData","setModelData","loaded","setLoaded","container","useRef","canvas","camera","textureLoader","modelLoader","modelGroup","scene","renderer","shadowGroup","renderTarget","renderTargetBlur","shadowCamera","depthMaterial","horizontalBlurMaterial","verticalBlurMaterial","plane","lights","blurPlane","fillPlane","isInViewport","useInViewport","threshold","reduceMotion","usePrefersReducedMotion","clientWidth","clientHeight","current","WebGLRenderer","alpha","antialias","powerPreference","setPixelRatio","setSize","outputEncoding","sRGBEncoding","physicallyCorrectLights","PerspectiveCamera","set","Scene","TextureLoader","GLTFLoader","Group","ambientLight","AmbientLight","keyLight","DirectionalLight","fillLight","forEach","light","add","rotateX","Math","PI","renderTargetSize","WebGLRenderTarget","texture","generateMipmaps","planeGeometry","PlaneBufferGeometry","planeMaterial","MeshBasicMaterial","opacity","transparent","Mesh","scale","visible","fillMaterial","color","OrthographicCamera","planeWidth","planeHeight","rotation","MeshDepthMaterial","userData","darkness","value","onBeforeCompile","shader","uniforms","fragmentShader","replace","depthTest","depthWrite","ShaderMaterial","HorizontalBlurShader","VerticalBlurShader","applyScreenTexture","async","node","encoding","minFilter","LinearFilter","magFilter","flipY","anisotropy","capabilities","getMaxAnisotropy","initTexture","material","Color","modelConfigPromises","model","loadFullResTexture","gltf","placeholder","Promise","all","loadAsync","traverse","convertSRGBToLinear","name","image","getImageFromSrcSet","fullSize","renderFrame","positionVector","Vector3","toArray","startPosition","endPosition","modelValue","chain","spring","from","to","stiffness","damping","restSpeed","frameNode","children","find","startRotation","MathUtils","degToRad","endRotation","getModelAnimation","removeLights","cleanScene","cleanRenderer","blurShadow","useCallback","amount","tDiffuse","h","setRenderTarget","render","v","initialBackground","background","overrideMaterial","blurAmount","introSprings","loadedModels","handleModelLoad","modelAnimation","push","loadScene","stop","rotationSpring","rotationSpringValue","onMouseMove","event","innerWidth","innerHeight","window","clientX","clientY","get","velocity","getVelocity","mass","addEventListener","removeEventListener","handleResize","aspect","updateProjectionMatrix","numToMs","role","SvgKatakanaProject","ProjectSummary","description","buttonText","buttonLink","alternate","externalLink","isExternal","isMobile","svgOpacity","indexText","phoneSizes","laptopSizes","renderDetails","Divider","notchWidth","notchHeight","collapsed","collapseDelay","Text","Button","iconHoverShift","href","iconEnd","renderPreview","type","isVisible","deviceModels","textures","sizes","ProfileText","choosedAvatar","setChoosedAvatar","choosedResume","setChoosedResume","chooseAvatar","resumes","size","onClick","Image","Chen","reveal","Jiang","Yan","Lu","SwitchTransition","CSSTransition","addEndListener","done","Profile","secondary","icon","SimpleSlider","dots","infinite","adaptiveHeight","draggable","slidesToScroll","autoplaySpeed","slidesToShow","easing","img11","img2","img3","img44","img5","img6","img7","img88","Home","useRouteTransition","hash","state","useLocation","initHash","visibleSections","setVisibleSections","setScrollIndicatorHidden","intro","projectOne","projectTwo","parksCarousel","details","prefersReducedMotion","revealSections","sectionObserver","IntersectionObserver","entries","observer","entry","isIntersecting","section","unobserve","includes","prevSections","rootMargin","indicatorObserver","observe","disconnect","hasEntered","supportsNativeSmoothScroll","document","documentElement","scrollObserver","scrollTimeout","handleHashchange","scroll","clearTimeout","hashSections","hashString","element","behavior","top","offsetTop","setTimeout","focus","left","scrollTo","Helmet","content","rel","crossorigin","park_model","srcSet","chess","chess_ph","Footer","align","weight","clampedLevel","min","max","Component","GothamBold","forwardRef","glyphs","CharType","startDelay","output","containerInstance","split","renderOutput","characterMap","innerHTML","springValue","rand","floor","random","shuffle","memo","resolve","reject","Error","tempImage","srcset","onLoad","currentSrc","error","resolveVideoSrcFromSrcSet","sources","srcString","createElement","ctx","getContext","fillStyle","fillRect","toDataURL","remove","generateImage","Number","fakeSrcSet","fakeSrc","VALID_EXT","Link","isValidExtension","pop","isAnchor","relValue","undefined","targetValue","RouterLink","onMouseUp","blurOnMouseUp","lineWidth","lineHeight","defaultProps","ImageElements","inViewport","play","showPlaceholder","setShowPlaceholder","playing","setPlaying","showPlayButton","setShowPlayButton","isHovered","setIsHovered","isFocused","setIsFocused","placeholderSize","setPlaceholderSize","videoSrc","setVideoSrc","placeholderRef","videoRef","isVideo","endsWith","imgSrc","showFullRes","purgePlaceholder","placeholderElement","resolvedVideoSrc","resolveVideoSrc","pause","togglePlaying","preventDefault","paused","handleFocusPlayButton","onMouseOver","onMouseOut","muted","loop","playsInline","autoPlay","onLoadStart","onExit","onExited","msToNum","durationS","onFocus","onBlur","decoding","raised","containerRef","Date","getFullYear","object","isMesh","geometry","dispose","isMaterial","cleanMaterial","keys","forceContextLoss","parent"],"mappings":"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","file":"static/js/3.18c74f67.chunk.js","sourcesContent":["var _path;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport * as React from \"react\";\n\nfunction SvgArrowDown({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    stroke: \"currentColor\",\n    width: 43,\n    height: 15,\n    viewBox: \"0 0 43 15\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1 1l20.5 12L42 1\",\n    strokeWidth: 2,\n    fill: \"none\"\n  })));\n}\n\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgArrowDown);\nexport default __webpack_public_path__ + \"static/media/arrow-down.fa92c5d4.svg\";\nexport { ForwardRef as ReactComponent };","import { Suspense, lazy, useEffect, useState, Fragment } from 'react'\nimport classNames from 'classnames'\nimport { TransitionGroup, Transition } from 'react-transition-group'\nimport DecoderText from 'components/DecoderText'\nimport { useInterval, usePrevious, useWindowSize } from 'hooks'\nimport { reflow } from 'utils/transition'\nimport prerender from 'utils/prerender'\nimport { media } from 'utils/style'\nimport { ReactComponent as ArrowDown } from 'assets/arrow-down.svg'\nimport { tokens } from 'components/ThemeProvider/theme'\nimport Heading from 'components/Heading'\nimport Section from 'components/Section'\nimport { useTheme } from 'components/ThemeProvider'\nimport VisuallyHidden from 'components/VisuallyHidden'\nimport './Intro.css'\n\nconst DisplacementSphere = lazy(() => import('pages/Home/DisplacementSphere'))\n\nfunction Intro({ id, sectionRef, disciplines, scrollIndicatorHidden, ...rest }) {\n    const theme = useTheme()\n    const [disciplineIndex, setDisciplineIndex] = useState(0)\n    const windowSize = useWindowSize()\n    const prevTheme = usePrevious(theme)\n    const introLabel = [\n        disciplines.slice(0, -1).join(', '),\n        disciplines.slice(-1)[0],\n    ].join(', and ')\n    const currentDisciplines = disciplines.filter(\n        (item, index) => index === disciplineIndex\n    )\n    const titleId = `${id}-title`\n\n    useInterval(\n        () => {\n            const index = (disciplineIndex + 1) % disciplines.length\n            setDisciplineIndex(index)\n        },\n        5000,\n        theme.themeId\n    )\n\n    useEffect(() => {\n        if (prevTheme && prevTheme.themeId !== theme.themeId) {\n            setDisciplineIndex(0)\n        }\n    }, [theme.themeId, prevTheme])\n\n    return (\n        <Section\n            className=\"intro\"\n            as=\"section\"\n            ref={sectionRef}\n            id={id}\n            aria-labelledby={titleId}\n            tabIndex={-1}\n            {...rest}\n        >\n            <Transition\n                key={theme.themeId}\n                appear={!prerender}\n                in={!prerender}\n                timeout={3000}\n                onEnter={reflow}\n            >\n                {status => (\n                    <Fragment>\n                        {!prerender && (\n                            <Suspense fallback={null}>\n                                <DisplacementSphere />\n                            </Suspense>\n                        )}\n                        <header className=\"intro__text\">\n                            <h1\n                                className={classNames(\n                                    'intro__name',\n                                    `intro__name--${status}`\n                                )}\n                                id={titleId}\n                            >\n                                <DecoderText\n                                    text=\" 上海大学 · 上海美术学院\"\n                                    start={!prerender}\n                                    delay={300}\n                                />\n                            </h1>\n                            <Heading level={0} as=\"h2\" className={classNames('intro__title','intro__player_wrapper')}>\n                                <div>\n                                <VisuallyHidden className=\"intro__title-label\">{`Designer + ${introLabel}`}</VisuallyHidden>\n                                <span\n                                    aria-hidden\n                                    className={classNames('intro__title-row', {\n                                        'intro__title-row--hidden': prerender,\n                                    })}\n                                >\n                                    <span\n                                        className={classNames(\n                                            'intro__title-word',\n                                            `intro__title-word--${status}`\n                                        )}\n                                        style={{ '--delay': tokens.base.durationXS}}\n                                    >\n                                        METAPARK<br></br>数幻游园\n                                    </span>\n                                    <span\n                                        classNameperppplllsss={classNames(\n                                            'intro__title-line',\n                                            `intro__title-line--${status}`\n                                        )}\n                                    />\n                                </span>\n                                <TransitionGroup\n                                    className={classNames('intro__title-row', {\n                                        'intro__title-row--hidden': prerender,\n                                    })}\n                                    component=\"span\"\n                                >\n                                    {currentDisciplines.map(item => (\n                                        <Transition\n                                            appear\n                                            timeout={{ enter: 3000, exit: 2000 }}\n                                            key={item}\n                                            onEnter={reflow}\n                                        >\n                                            {wordStatus => (\n                                                <span\n                                                    aria-hidden\n                                                    className={classNames(\n                                                        'intro__title-word',\n                                                        'intro__title-word--plus',\n                                                        `intro__title-word--${wordStatus}`\n                                                    )}\n                                                    style={{\n                                                        '--delay': tokens.base.durationL,\n                                                    }}\n                                                >\n                                                    {item}\n                                                </span>\n                                            )}\n                                        </Transition>\n                                    ))}\n                                </TransitionGroup>\n                                </div>\n                                <div className='intro_player'>\n                                    {/* <Player>\n\n                                    </Player> */}\n                                    <iframe\n                                    title='vedio'\n                                    src=\"//player.bilibili.com/player.html?aid=60016166&bvid=1b541197Yv&page=1&as_wide=1&high_quality=1&danmaku=0\"\n                                    allowfullscreen=\"allowfullscreen\"\n                                    width=\"100%\"\n                                    height=\"100%\"\n                                    scrolling=\"no\"\n                                    frameborder=\"0\"\n                                    sandbox=\"allow-top-navigation allow-same-origin allow-forms allow-scripts\"></iframe>\n                                </div>\n                            </Heading>\n                        </header>\n                        {windowSize.width > media.tablet && (\n                            <div\n                                className={classNames(\n                                    'intro__scroll-indicator',\n                                    `intro__scroll-indicator--${status}`,\n                                    {\n                                        'intro__scroll-indicator--hidden': scrollIndicatorHidden,\n                                    }\n                                )}\n                                status={status}\n                            />\n                        )}\n                        {windowSize.width <= media.tablet && (\n                            <div\n                                className={classNames(\n                                    'intro__mobile-scroll-indicator',\n                                    `intro__mobile-scroll-indicator--${status}`,\n                                    {\n                                        'intro__mobile-scroll-indicator--hidden': scrollIndicatorHidden,\n                                    }\n                                )}\n                            >\n                                <ArrowDown aria-hidden />\n                            </div>\n                        )}\n                    </Fragment>\n                )}\n            </Transition>\n        </Section>\n    )\n}\n\nexport default Intro\n","export default __webpack_public_path__ + \"static/media/iphone-11.dfa3acae.glb\";","export default __webpack_public_path__ + \"static/media/macbook-pro.29527f3f.glb\";","export default __webpack_public_path__ + \"static/media/vr-glasses.8239cffe.glb\";","import iphone11 from 'assets/iphone-11.glb'\nimport macbookPro from 'assets/macbook-pro.glb'\nimport vr from 'assets/vr-glasses.glb'\n\nexport const ModelAnimationType = {\n    SpringUp: 'spring-up',\n    LaptopOpen: 'laptop-open',\n}\n\nconst models = {\n    phone: {\n        url: iphone11,\n        width: 374,\n        height: 512,\n        position: { x: 0, y: 0, z: 0 },\n        animation: ModelAnimationType.SpringUp,\n    },\n    laptop: {\n        url: macbookPro,\n        width: 1280,\n        height: 800,\n        position: { x: 0, y: 0, z: 0 },\n        animation: ModelAnimationType.LaptopOpen,\n    },\n    vr: {\n        url: vr,\n        width: 1280,\n        height: 800,\n        position: { x: 0, y: 0, z: 0 },\n    }\n}\n\nexport default models\n","import { useEffect, useCallback, useRef, useState } from 'react'\nimport classNames from 'classnames'\nimport {\n    sRGBEncoding,\n    LinearFilter,\n    Color,\n    TextureLoader,\n    Vector3,\n    MathUtils,\n    Group,\n    AmbientLight,\n    DirectionalLight,\n    WebGLRenderer,\n    PerspectiveCamera,\n    Scene,\n    WebGLRenderTarget,\n    PlaneBufferGeometry,\n    MeshBasicMaterial,\n    Mesh,\n    OrthographicCamera,\n    MeshDepthMaterial,\n    ShaderMaterial,\n} from 'three'\nimport { HorizontalBlurShader } from 'three/examples/jsm/shaders/HorizontalBlurShader.js'\nimport { VerticalBlurShader } from 'three/examples/jsm/shaders/VerticalBlurShader.js'\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader.js'\nimport { delay, chain, spring, value } from 'popmotion'\nimport { getImageFromSrcSet } from 'utils/image'\nimport { useInViewport, usePrefersReducedMotion } from 'hooks'\nimport { cleanScene, cleanRenderer, removeLights } from 'utils/three'\nimport { ModelAnimationType } from './deviceModels'\nimport { numToMs } from 'utils/style'\nimport './index.css'\n\nconst MeshType = {\n    Frame: 'Frame',\n    Logo: 'Logo',\n    Screen: 'Screen',\n}\n\nconst Model = ({\n    models,\n    show = true,\n    showDelay = 0,\n    cameraPosition = { x: 0, y: 0, z: 8 },\n    enableControls,\n    style,\n    className,\n    alt,\n    ...rest\n}) => {\n    const [modelData, setModelData] = useState()\n    const [loaded, setLoaded] = useState(false)\n    const container = useRef()\n    const canvas = useRef()\n    const camera = useRef()\n    const textureLoader = useRef()\n    const modelLoader = useRef()\n    const modelGroup = useRef()\n    const scene = useRef()\n    const renderer = useRef()\n    const shadowGroup = useRef()\n    const renderTarget = useRef()\n    const renderTargetBlur = useRef()\n    const shadowCamera = useRef()\n    const depthMaterial = useRef()\n    const horizontalBlurMaterial = useRef()\n    const verticalBlurMaterial = useRef()\n    const plane = useRef()\n    const lights = useRef()\n    const blurPlane = useRef()\n    const fillPlane = useRef()\n    const isInViewport = useInViewport(container, false, { threshold: 0.4 })\n    const reduceMotion = usePrefersReducedMotion()\n\n    useEffect(() => {\n        const { clientWidth, clientHeight } = container.current\n\n        renderer.current = new WebGLRenderer({\n            canvas: canvas.current,\n            alpha: true,\n            antialias: false,\n            powerPreference: 'high-performance',\n        })\n\n        renderer.current.setPixelRatio(2)\n        renderer.current.setSize(clientWidth, clientHeight)\n        renderer.current.outputEncoding = sRGBEncoding\n        renderer.current.physicallyCorrectLights = true\n\n        camera.current = new PerspectiveCamera(36, clientWidth / clientHeight, 0.1, 100)\n        camera.current.position.set(cameraPosition.x, cameraPosition.y, cameraPosition.z)\n        scene.current = new Scene()\n\n        textureLoader.current = new TextureLoader()\n        modelLoader.current = new GLTFLoader()\n        modelGroup.current = new Group()\n\n        // Lighting\n        const ambientLight = new AmbientLight(0xffffff, 1.2)\n        const keyLight = new DirectionalLight(0xffffff, 1.1)\n        const fillLight = new DirectionalLight(0xffffff, 0.8)\n\n        fillLight.position.set(-6, 2, 2)\n        keyLight.position.set(0.5, 0, 0.866)\n        lights.current = [ambientLight, keyLight, fillLight]\n        lights.current.forEach(light => scene.current.add(light))\n\n        // The shadow container, if you need to move the plane just move this\n        shadowGroup.current = new Group()\n        scene.current.add(shadowGroup.current)\n        shadowGroup.current.position.set(0, 0, -0.8)\n        shadowGroup.current.rotateX(Math.PI / 2)\n\n        const renderTargetSize = 512\n        const planeWidth = 8\n        const planeHeight = 8\n        const cameraHeight = 1.5\n        const shadowOpacity = 0.8\n        const shadowDarkness = 3\n\n        // The render target that will show the shadows in the plane texture\n        renderTarget.current = new WebGLRenderTarget(renderTargetSize, renderTargetSize)\n        renderTarget.current.texture.generateMipmaps = false\n\n        // The render target that we will use to blur the first render target\n        renderTargetBlur.current = new WebGLRenderTarget(\n            renderTargetSize,\n            renderTargetSize\n        )\n        renderTargetBlur.current.texture.generateMipmaps = false\n\n        // Make a plane and make it face up\n        const planeGeometry = new PlaneBufferGeometry(planeWidth, planeHeight).rotateX(\n            Math.PI / 2\n        )\n\n        const planeMaterial = new MeshBasicMaterial({\n            map: renderTarget.current.texture,\n            opacity: shadowOpacity,\n            transparent: true,\n        })\n\n        plane.current = new Mesh(planeGeometry, planeMaterial)\n        // The y from the texture is flipped!\n        plane.current.scale.y = -1\n        shadowGroup.current.add(plane.current)\n\n        // The plane onto which to blur the texture\n        blurPlane.current = new Mesh(planeGeometry)\n        blurPlane.current.visible = false\n        shadowGroup.current.add(blurPlane.current)\n\n        // The plane with the color of the ground\n        const fillMaterial = new MeshBasicMaterial({\n            color: 0xffffff,\n            opacity: 0,\n            transparent: true,\n        })\n\n        fillPlane.current = new Mesh(planeGeometry, fillMaterial)\n        fillPlane.current.rotateX(Math.PI)\n        fillPlane.current.position.y -= 0.00001\n        shadowGroup.current.add(fillPlane.current)\n\n        // The camera to render the depth material from\n        shadowCamera.current = new OrthographicCamera(\n            -planeWidth / 2,\n            planeWidth / 2,\n            planeHeight / 2,\n            -planeHeight / 2,\n            0,\n            cameraHeight\n        )\n        // Get the camera to look up\n        shadowCamera.current.rotation.x = Math.PI / 2\n        shadowGroup.current.add(shadowCamera.current)\n\n        // Like MeshDepthMaterial, but goes from black to transparent\n        depthMaterial.current = new MeshDepthMaterial()\n        depthMaterial.current.userData.darkness = { value: shadowDarkness }\n        depthMaterial.current.onBeforeCompile = shader => {\n            shader.uniforms.darkness = depthMaterial.current.userData.darkness\n            shader.fragmentShader = `\n        uniform float darkness;\n        ${shader.fragmentShader.replace(\n            'gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );',\n            'gl_FragColor = vec4( vec3( 0.0 ), ( 1.0 - fragCoordZ ) * darkness );'\n        )}\n      `\n        }\n        depthMaterial.current.depthTest = false\n        depthMaterial.current.depthWrite = false\n\n        horizontalBlurMaterial.current = new ShaderMaterial(HorizontalBlurShader)\n        horizontalBlurMaterial.current.depthTest = false\n\n        verticalBlurMaterial.current = new ShaderMaterial(VerticalBlurShader)\n        verticalBlurMaterial.current.depthTest = false\n\n        const applyScreenTexture = async (texture, node) => {\n            texture.encoding = sRGBEncoding\n            texture.minFilter = LinearFilter\n            texture.magFilter = LinearFilter\n            texture.flipY = false\n            texture.anisotropy = renderer.current.capabilities.getMaxAnisotropy()\n            texture.generateMipmaps = false\n\n            // Decode the texture to prevent jank on first render\n            await renderer.current.initTexture(texture)\n\n            node.material.color = new Color(0xffffff)\n            node.material.transparent = false\n            node.material.map = texture\n        }\n\n        // Build an array of promises to fetch and apply models & animations\n        const modelConfigPromises = models.map(async (model, index) => {\n            const { texture, position, url } = model\n            let loadFullResTexture\n\n            const [gltf, placeholder] = await Promise.all([\n                await modelLoader.current.loadAsync(url),\n                await textureLoader.current.loadAsync(texture.placeholder),\n            ])\n\n            gltf.scene.traverse(async node => {\n                if (node.material) {\n                    node.material.color = new Color(0x1f2025)\n                    node.material.color.convertSRGBToLinear()\n                }\n\n                if (node.name === MeshType.Screen) {\n                    applyScreenTexture(placeholder, node)\n                    loadFullResTexture = async () => {\n                        const image = await getImageFromSrcSet(texture)\n                        const fullSize = await textureLoader.current.loadAsync(image)\n                        await applyScreenTexture(fullSize, node)\n                    }\n                }\n            })\n\n            modelGroup.current.add(gltf.scene)\n\n            const animation = getModelAnimation({\n                model,\n                gltf,\n                position,\n                reduceMotion,\n                renderFrame,\n                index,\n                showDelay,\n            })\n\n            return { ...animation, loadFullResTexture }\n        })\n\n        setModelData(modelConfigPromises)\n\n        return () => {\n            removeLights(lights.current)\n            cleanScene(scene.current)\n            cleanRenderer(renderer.current)\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    const blurShadow = useCallback(amount => {\n        blurPlane.current.visible = true\n\n        // Blur horizontally and draw in the renderTargetBlur\n        blurPlane.current.material = horizontalBlurMaterial.current\n        blurPlane.current.material.uniforms.tDiffuse.value = renderTarget.current.texture\n        horizontalBlurMaterial.current.uniforms.h.value = amount * (1 / 256)\n\n        renderer.current.setRenderTarget(renderTargetBlur.current)\n        renderer.current.render(blurPlane.current, shadowCamera.current)\n\n        // Blur vertically and draw in the main renderTarget\n        blurPlane.current.material = verticalBlurMaterial.current\n        blurPlane.current.material.uniforms.tDiffuse.value =\n            renderTargetBlur.current.texture\n        verticalBlurMaterial.current.uniforms.v.value = amount * (1 / 256)\n\n        renderer.current.setRenderTarget(renderTarget.current)\n        renderer.current.render(blurPlane.current, shadowCamera.current)\n\n        blurPlane.current.visible = false\n    }, [])\n\n    // Handle render passes for a single frame\n    const renderFrame = useCallback(() => {\n        const blurAmount = 5\n\n        // Remove the background\n        const initialBackground = scene.current.background\n        scene.current.background = null\n\n        // Force the depthMaterial to everything\n        // cameraHelper.visible = false;\n        scene.current.overrideMaterial = depthMaterial.current\n\n        // Render to the render target to get the depths\n        renderer.current.setRenderTarget(renderTarget.current)\n        renderer.current.render(scene.current, shadowCamera.current)\n\n        // And reset the override material\n        scene.current.overrideMaterial = null\n\n        blurShadow(blurAmount)\n\n        // A second pass to reduce the artifacts\n        // (0.4 is the minimum blur amout so that the artifacts are gone)\n        blurShadow(blurAmount * 0.4)\n\n        // Reset and render the normal scene\n        renderer.current.setRenderTarget(null)\n        scene.current.background = initialBackground\n\n        renderer.current.render(scene.current, camera.current)\n    }, [blurShadow])\n\n    useEffect(() => {\n        let introSprings = []\n\n        if (!modelData) return\n\n        scene.current.add(modelGroup.current)\n\n        const loadScene = async () => {\n            const loadedModels = await Promise.all(modelData)\n\n            setLoaded(true)\n\n            const handleModelLoad = loadedModels.map(async model => {\n                // Start animation\n                if (model.animation) {\n                    const modelAnimation = model.animation.start(model.modelValue)\n                    introSprings.push(modelAnimation)\n                }\n\n                if (reduceMotion) {\n                    renderFrame()\n                }\n\n                // Load full res screen texture\n                if(model.loadFullResTexture){\n                    await model.loadFullResTexture()\n                }\n\n                // Render the loaded texture\n                if (reduceMotion) {\n                    renderFrame()\n                }\n            })\n\n            await Promise.all(handleModelLoad)\n        }\n\n        if (show) {\n            loadScene()\n        }\n\n        return () => {\n            for (const spring of introSprings) {\n                spring.stop()\n            }\n        }\n    }, [modelData, reduceMotion, renderFrame, show])\n\n    // Handle mouse move animation\n    useEffect(() => {\n        let rotationSpring\n        let rotationSpringValue\n\n        const onMouseMove = event => {\n            const { rotation } = modelGroup.current\n            const { innerWidth, innerHeight } = window\n\n            const position = {\n                x: (event.clientX - innerWidth / 2) / innerWidth,\n                y: (event.clientY - innerHeight / 2) / innerHeight,\n            }\n\n            if (!rotationSpringValue) {\n                rotationSpringValue = value(\n                    { x: rotation.x, y: rotation.y },\n                    ({ x, y }) => {\n                        rotation.set(x, y, rotation.z)\n                        renderFrame()\n                    }\n                )\n            }\n\n            rotationSpring = spring({\n                from: rotationSpringValue.get(),\n                to: { x: position.y / 2, y: position.x / 2 },\n                stiffness: 40,\n                damping: 40,\n                velocity: rotationSpringValue.getVelocity(),\n                restSpeed: 0.00001,\n                mass: 1.4,\n            }).start(rotationSpringValue)\n        }\n\n        if (isInViewport && !reduceMotion) {\n            window.addEventListener('mousemove', onMouseMove)\n        }\n\n        return () => {\n            window.removeEventListener('mousemove', onMouseMove)\n            rotationSpring?.stop()\n        }\n    }, [isInViewport, reduceMotion, renderFrame])\n\n    // Handle window resize\n    useEffect(() => {\n        const handleResize = () => {\n            if (!container.current) return\n\n            const { clientWidth, clientHeight } = container.current\n\n            renderer.current.setSize(clientWidth, clientHeight)\n            camera.current.aspect = clientWidth / clientHeight\n            camera.current.updateProjectionMatrix()\n\n            renderFrame()\n        }\n\n        window.addEventListener('resize', handleResize)\n        handleResize()\n\n        return () => {\n            window.removeEventListener('resize', handleResize)\n        }\n    }, [renderFrame])\n\n    return (\n        <div\n            className={classNames('model', { 'model--loaded': loaded }, className)}\n            style={{ '--delay': numToMs(showDelay), ...style }}\n            ref={container}\n            role=\"img\"\n            aria-label={alt}\n            {...rest}\n        >\n            <canvas className=\"model__canvas\" ref={canvas} />\n        </div>\n    )\n}\n\n// Get custom model animation\nfunction getModelAnimation({ model, gltf, reduceMotion, renderFrame, index, showDelay }) {\n    const positionVector = new Vector3(\n        model.position.x,\n        model.position.y,\n        model.position.z\n    )\n\n    if (reduceMotion) {\n        gltf.scene.position.set(...positionVector.toArray())\n        return\n    }\n\n    // Simple slide up animation\n    if (model.animation === ModelAnimationType.SpringUp) {\n        const startPosition = new Vector3(\n            positionVector.x,\n            positionVector.y - 1,\n            positionVector.z\n        )\n        const endPosition = positionVector\n\n        gltf.scene.position.set(...startPosition.toArray())\n\n        const modelValue = value(gltf.scene.position, ({ x, y, z }) => {\n            gltf.scene.position.set(x, y, z)\n            renderFrame()\n        })\n\n        const animation = chain(\n            delay(300 * index + showDelay * 0.6),\n            spring({\n                from: startPosition,\n                to: endPosition,\n                stiffness: 60,\n                damping: 16,\n                restSpeed: 0.001,\n            })\n        )\n\n        return { animation, modelValue }\n    }\n\n    // Laptop open animation\n    if (model.animation === ModelAnimationType.LaptopOpen) {\n        const frameNode = gltf.scene.children.find(node => node.name === MeshType.Frame)\n        const startRotation = new Vector3(MathUtils.degToRad(90), 0, 0)\n        const endRotation = new Vector3(0, 0, 0)\n\n        gltf.scene.position.set(...positionVector.toArray())\n        frameNode.rotation.set(...startRotation.toArray())\n\n        const modelValue = value(frameNode.rotation, ({ x, y, z }) => {\n            frameNode.rotation.set(x, y, z)\n            renderFrame()\n        })\n\n        const animation = chain(\n            delay(300 * index + showDelay + 200),\n            spring({\n                from: startRotation,\n                to: endRotation,\n                stiffness: 50,\n                damping: 14,\n                restSpeed: 0.001,\n            })\n        )\n\n        return { animation, modelValue }\n    }\n}\n\nexport default Model\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport * as React from \"react\";\n\nfunction SvgKatakanaProject({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    \"aria-hidden\": \"true\",\n    fill: \"currentColor\",\n    width: 750,\n    height: 137,\n    viewBox: \"0 0 750 137\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props));\n}\n\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgKatakanaProject);\nexport default __webpack_public_path__ + \"static/media/katakana-project.36634356.svg\";\nexport { ForwardRef as ReactComponent };","import { Fragment } from 'react'\nimport classNames from 'classnames'\nimport { Transition } from 'react-transition-group'\nimport Section from 'components/Section'\nimport { Button } from 'components/Button'\nimport Model from 'components/Model'\nimport Divider from 'components/Divider'\nimport { useWindowSize } from 'hooks'\nimport { reflow, isVisible } from 'utils/transition'\nimport { media } from 'utils/style'\nimport { ReactComponent as KatakanaProject } from 'assets/katakana-project.svg'\nimport deviceModels from 'components/Model/deviceModels'\nimport Heading from 'components/Heading'\nimport Text from 'components/Text'\nimport { useTheme } from 'components/ThemeProvider'\nimport './ProjectSummary.css'\n\nconst ProjectSummary = ({\n    id,\n    visible,\n    sectionRef,\n    index,\n    title,\n    description,\n    model,\n    buttonText,\n    buttonLink,\n    alternate,\n    externalLink,\n    isExternal,\n    ...rest\n}) => {\n    const theme = useTheme()\n    const { width } = useWindowSize()\n    const titleId = `${id}-title`\n    const isMobile = width <= media.tablet\n    const svgOpacity = theme.themeId === 'light' ? 0.7 : 1\n    const indexText = index < 10 ? `0${index}` : index\n    const phoneSizes = `(max-width: ${media.tablet}px) 30vw, 20vw`\n    const laptopSizes = `(max-width: ${media.tablet}px) 80vw, 40vw`\n\n\n    const renderDetails = status => (\n        <div className=\"project-summary__details\">\n            <div aria-hidden className=\"project-summary__index\">\n                <Divider\n                    notchWidth=\"64px\"\n                    notchHeight=\"8px\"\n                    collapsed={status !== 'entered'}\n                    collapseDelay={1000}\n                />\n                <span\n                    className={classNames(\n                        'project-summary__index-number',\n                        `project-summary__index-number--${status}`\n                    )}\n                >\n                    {indexText}\n                </span>\n            </div>\n            <Heading\n                level={3}\n                as=\"h2\"\n                className={classNames(\n                    'project-summary__title',\n                    `project-summary__title--${status}`\n                )}\n                id={titleId}\n            >\n                {title}\n            </Heading>\n            <Text\n                className={classNames(\n                    'project-summary__description',\n                    `project-summary__description--${status}`\n                )}\n            >\n                {description}\n            </Text>\n            <div\n                className={classNames(\n                    'project-summary__button',\n                    `project-summary__button--${status}`\n                )}\n            >\n                <Button iconHoverShift href={buttonLink} isExternal={isExternal} iconEnd=\"arrowRight\">\n                    {buttonText}\n                </Button>\n            </div>\n        </div>\n    )\n\n    const renderPreview = status => (\n        <div className=\"project-summary__preview\">\n            {model.type === 'laptop' && (\n                <Fragment>\n                    <KatakanaProject\n                        style={{ '--opacity': svgOpacity }}\n                        className={classNames(\n                            'project-summary__svg',\n                            'project-summary__svg--laptop',\n                            `project-summary__svg--${status}`,\n                            {\n                                'project-summary__svg--light': theme.themeId === 'light',\n                            }\n                        )}\n                    />\n                    <Model\n                        className={classNames(\n                            'project-summary__model',\n                            'project-summary__model--laptop'\n                        )}\n                        alt={model.alt}\n                        cameraPosition={{ x: 0, y: 0, z: 8 }}\n                        showDelay={800}\n                        show={isVisible(status)}\n                        models={[\n                            {\n                                ...deviceModels.laptop,\n                                texture: {\n                                    ...model.textures[0],\n                                    sizes: laptopSizes,\n                                },\n                            },\n                        ]}\n                    />\n                </Fragment>\n            )}\n            {model.type === 'phone' && (\n                <Fragment>\n                    <KatakanaProject\n                        style={{ '--opacity': svgOpacity }}\n                        className={classNames(\n                            'project-summary__svg',\n                            'project-summary__svg--phone',\n                            `project-summary__svg--${status}`,\n                            {\n                                'project-summary__svg--light': theme.themeId === 'light',\n                            }\n                        )}\n                    />\n                    <Model\n                        className={classNames(\n                            'project-summary__model',\n                            'project-summary__model--phone'\n                        )}\n                        alt={model.alt}\n                        cameraPosition={{ x: 0, y: 0, z: 11.5 }}\n                        showDelay={500}\n                        show={isVisible(status)}\n                        models={[\n                            {\n                                ...deviceModels.phone,\n                                position: { x: -0.6, y: 1.1, z: 0 },\n                                texture: {\n                                    ...model.textures[0],\n                                    sizes: phoneSizes,\n                                },\n                            },\n                            {\n                                ...deviceModels.phone,\n                                position: { x: 0.6, y: -0.5, z: 0.3 },\n                                texture: {\n                                    ...model.textures[1],\n                                    sizes: phoneSizes,\n                                },\n                            },\n                        ]}\n                    />\n                </Fragment>\n            )}\n\n            {model.type === 'vr' && (\n                <Fragment>\n                    <KatakanaProject\n                        style={{ '--opacity': svgOpacity }}\n                        className={classNames(\n                            'project-summary__svg',\n                            'project-summary__svg--phone',\n                            `project-summary__svg--${status}`,\n                            {\n                                'project-summary__svg--light': theme.themeId === 'light',\n                            }\n                        )}\n                    />\n                    <Model\n                        className={classNames(\n                            'project-summary__model',\n                            'project-summary__model--vr'\n                        )}\n                        alt={model.alt}\n                        cameraPosition={{ x: 0.1, y: 0, z: 5 }}\n                        showDelay={100}\n                        show={isVisible(status)}\n                        models={[\n                            {\n                                ...deviceModels.vr,\n                                texture: {\n                                    ...model.textures[0],\n                                    sizes: laptopSizes,\n                                }\n                            },\n                        ]}\n                    />\n                </Fragment>\n            )}\n            {/* {model.type === 'vr' && (\n                <Fragment>\n                    <KatakanaProject\n                        style={{ '--opacity': svgOpacity }}\n                        className={classNames(\n                            'project-summary__svg',\n                            'project-summary__svg--phone',\n                            `project-summary__svg--${status}`,\n                            {\n                                'project-summary__svg--light': theme.themeId === 'light',\n                            }\n                        )}\n                    />\n                    <Model\n                        className={classNames(\n                            'project-summary__model',\n                            'project-summary__model--phone'\n                        )}\n                        alt={model.alt}\n                        cameraPosition={{ x: 0, y: 0, z: 11.5 }}\n                        showDelay={500}\n                        show={isVisible(status)}\n                        models={[\n                            {\n                                ...deviceModels.vr,\n                                position: { x: -0.6, y: 1.1, z: 0 },\n                                texture: {\n                                    ...model.textures[0],\n                                    sizes: laptopSizes,\n                                },\n                            }\n                        ]}\n                    />\n                </Fragment>\n            )} */}\n        </div>\n    )\n\n    return (\n        <Section\n            className={classNames('project-summary', {\n                'project-summary--alternate': alternate,\n                'project-summary--first': index === '01',\n            })}\n            as=\"section\"\n            aria-labelledby={titleId}\n            ref={sectionRef}\n            id={id}\n            tabIndex={-1}\n            {...rest}\n        >\n            <div className=\"project-summary__content\">\n                <Transition in={visible} timeout={0} onEnter={reflow}>\n                    {status => (\n                        <Fragment>\n                            {!alternate && !isMobile && (\n                                <Fragment>\n                                    {renderDetails(status)}\n                                    {renderPreview(status)}\n                                </Fragment>\n                            )}\n                            {(alternate || isMobile) && (\n                                <Fragment>\n                                    {renderPreview(status)}\n                                    {renderDetails(status)}\n                                </Fragment>\n                            )}\n                        </Fragment>\n                    )}\n                </Transition>\n            </div>\n        </Section>\n    )\n}\n\nexport default ProjectSummary\n","export default __webpack_public_path__ + \"static/media/Chen.3abece13.jpg\";","export default __webpack_public_path__ + \"static/media/Lu.bfd0629f.jpg\";","export default __webpack_public_path__ + \"static/media/Jiang.945dd1d2.jpg\";","export default __webpack_public_path__ + \"static/media/Yan.db1b9bd9.jpg\";","export default __webpack_public_path__ + \"static/media/Sun.22d72cdd.jpg\";","import { Fragment } from 'react'\nimport classNames from 'classnames'\nimport { Transition, CSSTransition, SwitchTransition } from 'react-transition-group'\nimport { Button } from 'components/Button'\nimport DecoderText from 'components/DecoderText'\nimport Image from 'components/Image'\nimport Section from 'components/Section'\nimport Chen from 'assets/Chen.jpg'\nimport Lu from 'assets/Lu.jpg'\nimport Jiang from 'assets/Jiang.jpg'\nimport Sun from 'assets/Sun.jpg'\nimport Yan from 'assets/Yan.jpg'\nimport { reflow } from 'utils/transition'\nimport Heading from 'components/Heading'\nimport Text from 'components/Text'\nimport './Profile.css'\nimport { useState, useEffect } from 'react'\n\n\nconst ProfileText = ({ status, titleId }) => {\n    const [choosedAvatar, setChoosedAvatar] = useState(0)\n    const [choosedResume, setChoosedResume] = useState(<div>123</div>)\n    const chooseAvatar = (id) => {\n        setChoosedAvatar(id)\n    }\n\n    useEffect(() => {\n        const resumes = [\n            // 程雪松\n            <Text\n                className={classNames(\n                    'profile__description',\n                    `profile__description--entered`\n                )}\n                size=\"m\"\n            >\n                博士，教授，博导，现任上海大学上海美术学院设计系主任，上海美术学院学术委员会委员，设计学科组召集人。上海大学环境设计国家级一流专业建设点负责人，中国建筑学会会员，上海市美术家协会会员，上海市商业经济学会理事，2020阿联酋迪拜世博会中国馆专家委员会委员。\n                <br></br> <br></br>\n                主要从事城镇环境更新设计和上海设计史研究。在专业学术期刊发表学术论文四十多篇，独立或合作出版专著、教材、论文集八部，主持上海市艺术科学规划、文教结合、教育部新文科改革等科研、教研课题及相关工程实践多项。作品入选文化旅游部和中国美协展览，获上海市高等教育教学成果奖二等奖(第一完成人)，宝钢优秀教师奖，上海市育才奖。担任2019米兰三年展中国国家馆上海大学展区执行策展与艺术设计。主讲课程《商业空间设计》获上海市重点课程立项和一流课程认定。\n            </Text>,\n            //蒋飞\n            <Text\n            className={classNames(\n                'profile__description',\n                `profile__description--entered`\n            )}\n            size=\"m\"\n            >\n            公共艺术专业博士，机械工程博士后，现任上海美术学院数码艺术系副主任，上海大学国际学生知华导师，美国麻省理工学院媒体实验室客座教授，教字光影技术湖北省工程设计中心客座教授。\n            <br></br><br></br>\n            跨学科背景横跨三个领域：艺术设计、媒体艺术和机械工程。作品专注于交互设计、可穿戴传感和沉浸式体验，作品在第16届中国国际工业博览会、第1届澳门国际设计展、上海设计大展等多个国际、国内展览展出，发表中、英文学术论文十余篇，所授的数字媒体艺术相关课程曾获得上海市高校艺术与设计类青年教师教学竞赛一等奖。\n            </Text>,\n            //孙继伟\n            <Text\n            className={classNames(\n                'profile__description',\n                `profile__description--entered`\n            )}\n            size=\"m\"\n            >\n            中国首位问题管理专家，复旦大学博士，上海大学教授，大简资本创始人。历任证券公司投资经理、李嘉诚旗下合资企业总裁助理、龙创设计(832954)董事、上海静安投资集团外部董事，上海市创业指导专家，多家单位的创新创业导师。\n            <br></br><br></br>\n            出版《企业管理视野中的风险投资》等专著6部，领导团队7年持续研究新三板，连续6年研究发布《新三板年度盘点三部曲》，主持20多家新三板公司投资。从事创业投资研究和实践20年，主持完成多项PE/VC投资项目。给多个培训班和论坛作过”中小企业梯度融资与北交所上市”培训讲座，已实施多家”挺进北交所”的成功案例。\n            <br></br><br></br>\n            创办的大简投资管理（上海）有限公司获得创业投资与股权投资类私募基金管理人资质、上海中小企业服务机构荣誉（上海市经信委授牌）。\n            </Text>,\n            //严晓勤\n            <Text\n            className={classNames(\n                'profile__description',\n                `profile__description--entered`\n            )}\n            size=\"m\"\n            >\n            上海大学上海美术学院设计系高级工程师，研究方向为园林景观设计。参与主持了多项海内外中国古典园林、古典建筑、现代城市景观及城市绿地系统、风景区项目的规划、设计、论证。曾任江苏省建筑园林设计院院长，完成的主要项目有南京高新区园林景观规划，南京江宁东山公园总体规划，乌鲁木齐丹凤朝阳阁及广场，安徽三祖寺、山谷流泉总规划，南京中国人家高尚墅景观设计，澳大利亚墨尔本Cohen广场棂门、唐人街改造等。\n            </Text>,\n            //卢俊辉\n            <Text\n            className={classNames(\n                'profile__description',\n                `profile__description--entered`\n            )}\n            size=\"m\"\n            >\n            上海大学上海美术学院艺术设计专业研究生，研究方向为环境设计，国际青年美术设计协会会员，第二届ICAD国际当代青年美术设计大赛 铜奖，第十八届“中南星”艺术设计大赛学生组第二名，河南省优秀学士学位论文，校优秀毕业生、优秀毕业设计、优秀班干等；有多次创新创业经验；实战经验较为丰富，具备前期项目策划的能力，在本项目中主要负责支持日常各项经营管理工作，协调监督项目进展情况、进行合作洽谈，场景建模，环境设计等工作。\n            <br></br><br></br>\n            </Text>\n        ]\n        setChoosedResume(resumes[choosedAvatar])\n    }, [choosedAvatar])\n    return (\n    <Fragment>\n        <Heading\n            className={classNames('profile__title', `profile__title--${status}`)}\n            level={3}\n            id={titleId}\n        >\n           <span className={'profile__subtitle'}>&nbsp;</span> <DecoderText text=\"关于我们\" start={status !== 'exited'} delay={500} />\n        </Heading>\n        <Heading\n            className={classNames('clear_bottom', 'profile__title', `profile__title--${status}`)}\n            level={4}\n        >\n            <span className={'profile__subtitle'}>项目介绍</span>\n        </Heading>\n        <Text\n            className={classNames(\n                'profile__description',\n                `profile__description--${status}`\n            )}\n            size=\"m\"\n        >\n            随着后疫情时代的到来以及“宅文化”的兴起，使得“数字原住民”不断扩增。同时，疫情的反复导致线下生活受到影响，公园常驻人群也期待能以更安全便捷地方式享受到城市公园中的自然绿意。“Metapark数幻游园”公园虚拟交互平台正是基于这样的时代背景，通过技术与艺术相结合的手段，把城市中的老公园“搬进”数字空间里，从而使人们能随时随地通过移动设备进入“城市公园元宇宙”内进行休闲、游玩和交友等活动。我们期待：让青年人看见历史，让老年人遇见科技！\n        </Text>\n        <Heading\n            level={4}\n            className={classNames('clear_bottom', 'profile__title', `profile__title--${status}`)}\n        >\n            <span className={classNames('profile__subtitle',`profile__subtitle--${status}`)}>团队介绍</span>\n        </Heading>\n        <Text\n            className={classNames(\n                'profile__description',\n                `profile__description--${status}`\n            )}\n            size=\"m\"\n        >\n            我们是一支具有多元学科背景的创新型研究团队，团队负责人为上海大学上海美术学院环境设计专业研究生卢俊辉，核心成员分别来自上海大学上海美术学院、社会学院、管理学院、计算机工程与技术学院等。\n我们的愿景是：让每一个人都能够在数字世界里畅想绿艺!\n        </Text>\n        <div className='profile__avatar-list'>\n            <div className={classNames('profile__avatar-wrapper', choosedAvatar === 0 ? 'profile__avatar-wrapper-choosed' : '')}>\n                <div className= \"profile__avatar\" onClick={() => chooseAvatar(0)}>\n                    <Image src={Chen} reveal delay={200}/>\n                </div>\n                <div className= \"profile__avatar__text\">指导老师 程雪松</div>\n            </div>\n            <div className={classNames('profile__avatar-wrapper', choosedAvatar === 1 ? 'profile__avatar-wrapper-choosed' : '')}>\n                <div className= \"profile__avatar\" onClick={() => chooseAvatar(1)}>\n                    <Image src={Jiang} reveal delay={700}/>\n                </div>\n                <div className= \"profile__avatar__text\">指导老师 蒋飞</div>\n            </div>\n            {/*<div className={classNames('profile__avatar-wrapper', choosedAvatar === 2 ? 'profile__avatar-wrapper-choosed' : '')}>*/}\n            {/*    <div className= \"profile__avatar\" onClick={() => chooseAvatar(2)}>*/}\n            {/*        <Image src={Sun} reveal delay={1200}/>*/}\n            {/*    </div>*/}\n            {/*    <div className= \"profile__avatar__text\">指导老师 孙继伟</div>*/}\n            {/*</div>*/}\n            <div className={classNames('profile__avatar-wrapper', choosedAvatar === 3 ? 'profile__avatar-wrapper-choosed' : '')}>\n                <div className= \"profile__avatar\" onClick={() => chooseAvatar(3)}>\n                    <Image src={Yan} reveal delay={1700}/>\n                </div>\n                <div className= \"profile__avatar__text\">指导老师 严晓勤</div>\n            </div>\n            <div className={classNames('profile__avatar-wrapper', choosedAvatar === 4 ? 'profile__avatar-wrapper-choosed' : '')}>\n                <div className= \"profile__avatar\" onClick={() => chooseAvatar(4)}>\n                    <Image src={Lu} reveal delay={2200}/>\n                </div>\n                <div className= \"profile__avatar__text\" >负责人 卢俊辉</div>\n            </div>\n        </div>\n        <SwitchTransition>\n            <CSSTransition\n                key={choosedAvatar}\n                classNames='fade'\n                addEndListener={(node, done) => node.addEventListener(\"transitionend\", done, false)}\n            >\n                {choosedResume}\n            </CSSTransition>\n        </SwitchTransition>\n    </Fragment>\n)}\n\n\nconst Profile = ({ id, visible, sectionRef }) => {\n    const titleId = `${id}-title`\n\n    return (\n        <Section\n            className=\"profile\"\n            as=\"section\"\n            id={id}\n            ref={sectionRef}\n            aria-labelledby={titleId}\n            tabIndex={-1}\n        >\n            <Transition in={visible} timeout={0} onEnter={reflow}>\n                {status => (\n                    <div>      \n                            <ProfileText status={status} titleId={titleId} />\n                            <div className='profile__contact'>\n                            <Button\n                                secondary\n                                className={classNames(\n                                    'profile__button',\n                                    `profile__button--${status}`\n                                )}\n                                href=\"/contact\"\n                                icon=\"send\"\n                            >\n                                联系我们\n                            </Button>\n                            </div>\n                    </div>\n                )}\n            </Transition>\n        </Section>\n    )\n}\n\nexport default Profile\n","export default __webpack_public_path__ + \"static/media/parkmodel.acd863dd.jpg\";","export default __webpack_public_path__ + \"static/media/chess-1.dc615ff7.jpg\";","export default __webpack_public_path__ + \"static/media/chess-1_blurred.ebe37828.jpg\";","export default __webpack_public_path__ + \"static/media/02.1c292596.jpg\";","export default __webpack_public_path__ + \"static/media/01.9749698c.jpg\";","export default __webpack_public_path__ + \"static/media/03.ea04b04c.jpg\";","export default __webpack_public_path__ + \"static/media/05.1e194336.jpg\";","export default __webpack_public_path__ + \"static/media/04.d274a78a.jpg\";","export default __webpack_public_path__ + \"static/media/06.9eaaadd1.jpg\";","export default __webpack_public_path__ + \"static/media/07.fb275a83.jpg\";","export default __webpack_public_path__ + \"static/media/1.049a8437.jpg\";","export default __webpack_public_path__ + \"static/media/08.7392f09b.jpg\";","export default __webpack_public_path__ + \"static/media/4.3a2abf55.jpg\";","export default __webpack_public_path__ + \"static/media/2.d78bd0a8.jpg\";","export default __webpack_public_path__ + \"static/media/3.96d7fd19.jpg\";","export default __webpack_public_path__ + \"static/media/8.12625fc3.jpg\";","export default __webpack_public_path__ + \"static/media/5.21706b75.jpg\";","export default __webpack_public_path__ + \"static/media/6.7dd98fc7.jpg\";","export default __webpack_public_path__ + \"static/media/7.e194534b.jpg\";","import Slider from \"react-slick\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport \"./Carousel.css\";\nimport Section from 'components/Section'\n\nimport img1 from '../../assets/01.jpg';\nimport img2 from '../../assets/02.jpg';\nimport img3 from '../../assets/03.jpg';\nimport img4 from '../../assets/04.jpg';\nimport img5 from '../../assets/05.jpg';\nimport img6 from '../../assets/06.jpg';\nimport img7 from '../../assets/07.jpg';\nimport img8 from '../../assets/08.jpg';\nimport img11 from '../../assets/1.jpg';\nimport img22 from '../../assets/2.jpg';\nimport img33 from '../../assets/3.jpg';\nimport img44 from '../../assets/4.jpg';\nimport img55 from '../../assets/5.jpg';\nimport img66 from '../../assets/6.jpg';\nimport img77 from '../../assets/7.jpg';\nimport img88 from '../../assets/8.jpg';\n\nfunction SampleNextArrow(props) {\n    const { className, style, onClick } = props;\n    return (\n        <div\n            className={className}\n            style={{ ...style,  background: \"red\" ,width:\"10px\" }}\n            onClick={onClick}\n        />\n    );\n}\n\nfunction SamplePrevArrow(props) {\n    const { className, style, onClick } = props;\n    return (\n        <div\n            className={className}\n            style={{ ...style, background: \"green\" }}\n            onClick={onClick}\n        />\n    );\n}\n\n\nexport default function SimpleSlider({id, visible, sectionRef}) {\n    const titleId = `${id}-title`\n    var settings = {\n        dots: false,\n        infinite: true,\n        // lazyLoad: true,\n        adaptiveHeight: false,\n        draggable: false ,\n        slidesToScroll: 1,\n        autoplaySpeed: 2500,\n        className:\"cur\",\n        slidesToShow:1,\n        easing:true,\n        // arrows: false,\n        // nextArrow: <SampleNextArrow />,\n        // prevArrow: <SamplePrevArrow />\n    };\n    return (\n        <Section\n            as=\"section\"\n            id={id}\n            ref={sectionRef}\n            aria-labelledby={titleId}\n            tabIndex={-1}\n            className=\"parkCarousel\"\n        >\n            <div className=\"container_wrapper\">\n                <div className=\"container\">\n                    <Slider {...settings}>\n                        <div>\n                            <img src={img11} alt=\"\" className=\"bottom-border\"/>\n                            <a>豫园（Yu Garden）位于上海市老城厢的东北部，北靠福佑路，东临安仁街，西南与上海老城隍庙毗邻，是江南古典园林，始建于明代嘉靖、万历年间，占地三十余亩。豫园的绿化布局合理，植物配置得当，层次分明，其特点是古树名木多、大盆景多、摆花多，园内还有穗堂、铁狮子、快楼、得月楼、玉玲珑、积玉水廊、听涛阁、涵碧楼、内园静观大厅、古戏台等亭台楼阁以及假山、池塘等四十余处古代建筑。</a>\n                        </div>\n                        {/*<img src={img11} alt=\"\"/>*/}\n\n\n                        {/*<div>*/}\n                        {/*    <img src={img22} alt={\"\"}/>*/}\n                        {/*</div>*/}\n                        <div>\n                            <img src={img2} alt=\"\" className=\"bottom-border\"/>\n                            <a>古猗园（Guyi Garden）位于上海市嘉定区南翔镇，国家AAAA级旅游景点，上海五大古典园林之一。古猗园初名猗园，建于明代嘉靖年间（公元1522—1566年），为时任河南通判闵士籍所建。取《诗卫风淇奥》“绿竹猗猗”为美盛貌，融嵇康《琴赋》“微风余音，靡靡猗猗，余音袅袅”为一炉而得“猗园”名。由明代嘉定竹刻名家朱三松精心设计，有“十亩之园，五亩之宅”的规模。</a>\n                        </div>\n\n                        {/*<div>*/}\n                        {/*    <img src={img33} alt={\"\"}/>*/}\n                        {/*</div>*/}\n                        <div>\n                            <img src={img3} alt=\"\" className=\"bottom-border\"/>\n                            <a>鲁迅公园（Lu Xun Park），原名虹口公园，位于上海市虹口区四川北路甜爱支路280号，是上海主要历史文化纪念性公园和中国第一个体育公园。园内有国家级文物保护单位——鲁迅墓，上海鲁迅纪念馆，震撼近代史的尹奉吉义举纪念地梅园。有山有水有瀑布，山水之间，堤桥相连，景色优美。总体上保留了英国风景园的特点。上海鲁迅纪念馆内陈列品重点表现了鲁迅在上海10年的社会活动和文化生活。</a>\n\n                        </div>\n\n                        <div >\n                            <img src={img44} alt=\"\" className=\"bottom-border\"/>\n                            <a>中山公园（Zhong Shan Park），原名兆丰公园，位于上海市长宁区长宁路780号（近定西路），1914 年英国人兆丰在沪时建立的，是当时上海最负盛名的公园。公园以英国式自然造园风格为主，融中国园林艺术之精华，中西合壁，风格独特，是上海原有景观风格保持最为完整的老公园。获得过“上海市四星级公园”的荣誉称号。中山公园占地面积约20万平方米，全园可分为大小不等的景点约120余处。</a>\n\n                        </div>\n                        {/*<div>*/}\n                        {/*    <img src={img4} alt=\"\"/>*/}\n                        {/*</div>*/}\n\n                        <div>\n                            <img src={img5} alt=\"\" className=\"bottom-border\"/>\n                            <a>黄浦公园（Huangpu park），位于上海市中山东一路28号，占地31亩，绿化面积10.92亩。东濒黄浦江，南邻外滩绿带，西沿中山东一路，北接吴淞江（苏州河）。建成于1868年8月，经过多次改建，用过多个名称：公花园、外国花园、公家花园、大桥公园、外摆渡公园、黄浦滩公园等。公园把上海市人民英雄纪念塔、外滩历史纪念馆等与公园园林景观融为一体，集观光、休闲、教育之功能，是外滩重要景观之一。</a>\n                        </div>\n                        {/*<div>*/}\n                        {/*    <img src={img55} alt=\"\"/>*/}\n                        {/*</div>*/}\n\n                        {/*<div className=\"no-left\">*/}\n                        {/*    <img src={img66} alt=\"\"/>*/}\n                        {/*</div>*/}\n                        <div>\n                            <img src={img6} alt=\"\" className=\"bottom-border\"/>\n                            <a>秋霞圃（Qiu Xia Pu）是中国江南著名的古典园林，位于上海嘉定区嘉定镇东大街，东邻秋霞公寓，西毗陆俨少艺术院，南连东大街，北依启良路。秋霞圃是一座具有独特风格的明代园林，由三座私家园林明代龚氏园、沈氏园、金氏园和邑庙（城隍庙）合并而成，全园面积45.36亩。该园分为四个景区：桃花潭景区（原龚氏园）、凝霞阁景区（原沈氏园）、清镜塘景区（原金氏园）及邑庙景区。</a>\n                        </div>\n\n                        {/*<div className=\"no-left\">*/}\n                        {/*    <img src={img77} alt=\"\"/>*/}\n                        {/*</div>*/}\n                        <div>\n                            <img src={img7} alt=\"\" className=\"bottom-border\"/>\n                            <a>曲水园（Qushui Garden）位于上海青浦区公园路612号。初建于清乾隆十年（公元1745年）。据说为了建此园，曾向城中每个居民征募一文钱，故又有“一文园”之称。乾隆四十九年（公元1784年），拓地池筑堤累石，增建楼台，前后历四十余年，建成二十四景，三十余庙的园林。园内一石一水，一亭一阁，尽皆成趣。嘉庆三年改园名为曲水园。因园在大盈浦旁，取王羲之《兰亭集序》中的“曲水流觞”之意。</a>\n\n                        </div>\n\n                        <div className=\"no-left\">\n\n                            <img src={img88} alt=\"\" className=\"bottom-border\"/>\n                            <a>醉白池（Zuibai Pool）是江南著名的古典园林之一，是上海的旅游胜地，已有九百余年历史。醉白池历经300余年，仍保存有堂，轩，亭，舫，榭等古建筑，并保持着明清江南园林风貌。园内古木葱笼，亭台密布，古迹甚多，有四面厅、乐天轩、疑肪、雪海堂、宝成楼、池上草堂等亭台楼阁及邦彦画像石刻、《赤壁赋》真迹石刻、《难得糊涂》石刻等艺术瑰宝，还有树龄在三四百年的古银杏、古樟树，年龄在百年以上的牡丹。\n                            </a>\n                        </div>\n                        {/*<div>*/}\n                        {/*    <img src={img8} alt=\"\"/>*/}\n                        {/*</div>*/}\n\n                    </Slider>\n                </div>\n            </div>\n        </Section>\n    );\n}","import { useState, useEffect, useRef } from 'react'\nimport { Helmet } from 'react-helmet'\nimport Intro from 'pages/Home/Intro'\nimport ProjectSummary from 'pages/Home/ProjectSummary'\nimport Profile from 'pages/Home/Profile'\nimport Footer from 'components/Footer'\nimport { usePrefersReducedMotion, useRouteTransition } from 'hooks'\nimport { useLocation } from 'react-router-dom'\nimport iphone11 from 'assets/iphone-11.glb'\nimport macbookPro from 'assets/macbook-pro.glb'\n// import spotify_player from 'assets/spotify-player.jpg'\n// import spotify_player_placeholder from 'assets/spotify-player-blurred.jpg'\n// import player from 'assets/player.jpg'\n// import player_placeholder from 'assets/player-blurred.jpg'\nimport park_model from 'assets/parkmodel.jpg'\nimport chess from 'assets/chess-1.jpg'\n//import chess2 from 'assets/chess-2.jpg'\nimport chess_ph from 'assets/chess-1_blurred.jpg'\n//import chess2_ph from 'assets/chess-2_blurred.jpg'\n// import fubuki from 'assets/fubuki-npm-light.png'\n// import fubuki_ph from 'assets/fubuki-ph.jpg'\n// import contrib from 'assets/gh-contrib-terminal.png'\n// import contrib_ph from 'assets/gh-contrib_blurred.jpg'\n\nimport './index.css'\n\nimport Carousel from \"pages/Home/Carousel\";\n\n\n\nconst disciplines = ['Digital', 'Green','Healthy']\n\nconst Home = () => {\n    const { status } = useRouteTransition()\n    const { hash, state } = useLocation()\n    const initHash = useRef(true)\n    const [visibleSections, setVisibleSections] = useState([])\n    const [scrollIndicatorHidden, setScrollIndicatorHidden] = useState(false)\n    const intro = useRef()\n    const projectOne = useRef()\n    const projectTwo = useRef()\n    // const projectThree = useRef()\n    // const projectFour = useRef()\n    // const projectFive = useRef()\n    const parksCarousel = useRef()\n    const details = useRef()\n    const prefersReducedMotion = usePrefersReducedMotion()\n\n    useEffect(() => {\n        const revealSections = [\n            intro,\n            projectOne,\n            projectTwo,\n            parksCarousel,\n            //projectThree,\n            //projectFour,\n            //projectFive,\n            details,\n        ]\n\n        const sectionObserver = new IntersectionObserver(\n            (entries, observer) => {\n                entries.forEach(entry => {\n                    if (entry.isIntersecting) {\n                        const section = entry.target\n                        observer.unobserve(section)\n                        if (visibleSections.includes(section)) return\n                        setVisibleSections(prevSections => [...prevSections, section])\n                    }\n                })\n            },\n            { rootMargin: '0px 0px -10% 0px' }\n        )\n\n        const indicatorObserver = new IntersectionObserver(\n            ([entry]) => {\n                setScrollIndicatorHidden(!entry.isIntersecting)\n            },\n            { rootMargin: '-100% 0px 0px 0px' }\n        )\n\n        revealSections.forEach(section => {\n            sectionObserver.observe(section.current)\n        })\n\n        indicatorObserver.observe(intro.current)\n\n        return () => {\n            sectionObserver.disconnect()\n            indicatorObserver.disconnect()\n        }\n    }, [visibleSections])\n\n    useEffect(() => {\n        const hasEntered = status === 'entered'\n        const supportsNativeSmoothScroll =\n            'scrollBehavior' in document.documentElement.style\n        let scrollObserver\n        let scrollTimeout\n\n        const handleHashchange = (hash, scroll) => {\n            clearTimeout(scrollTimeout)\n            const hashSections = [intro, projectOne, details, parksCarousel]\n            const hashString = hash.replace('#', '')\n            const element = hashSections.filter(item => item.current.id === hashString)[0]\n            if (!element) return\n            const behavior = scroll && !prefersReducedMotion ? 'smooth' : 'instant'\n            const top = element.current.offsetTop\n\n            scrollObserver = new IntersectionObserver(\n                (entries, observer) => {\n                    const [entry] = entries\n                    if (entry.isIntersecting) {\n                        scrollTimeout = setTimeout(\n                            () => {\n                                element.current.focus()\n                            },\n                            prefersReducedMotion ? 0 : 400\n                        )\n                        observer.unobserve(entry.target)\n                    }\n                },\n                { rootMargin: '-20% 0px -20% 0px' }\n            )\n\n            scrollObserver.observe(element.current)\n\n            if (supportsNativeSmoothScroll) {\n                window.scroll({\n                    top,\n                    left: 0,\n                    behavior,\n                })\n            } else {\n                window.scrollTo(0, top)\n            }\n        }\n\n        if (hash && initHash.current && hasEntered) {\n            handleHashchange(hash, false)\n            initHash.current = false\n        } else if (!hash && initHash.current && hasEntered) {\n            window.scrollTo(0, 0)\n            initHash.current = false\n        } else if (hasEntered) {\n            handleHashchange(hash, true)\n        }\n\n        return () => {\n            clearTimeout(scrollTimeout)\n            if (scrollObserver) {\n                scrollObserver.disconnect()\n            }\n        }\n    }, [hash, state, prefersReducedMotion, status])\n\n    return (\n        <div className=\"home\">\n            <Helmet>\n                <title>MetaPark | 数幻游园</title>\n                <meta\n                    name=\"description\"\n                    content=\"Portfolio of Alen Yohannan – a backend devloper working on node apps\"\n                />\n                <link rel=\"prefetch\" href={iphone11} as=\"fetch\" crossorigin=\"\" />\n                <link rel=\"prefetch\" href={macbookPro} as=\"fetch\" crossorigin=\"\" />\n            </Helmet>\n            <Intro\n                id=\"intro\"\n                sectionRef={intro}\n                disciplines={disciplines}\n                scrollIndicatorHidden={scrollIndicatorHidden}\n            />\n            <ProjectSummary\n                id=\"project-1\"\n                sectionRef={projectOne}\n                visible={visibleSections.includes(projectOne.current)}\n                index={1}\n                title=\"上海复兴公园在线游览\"\n                description=\"Shanghai Fuxin Park Online Tour\"\n                buttonText=\"查看详情\"\n                buttonLink=\"/25D-page/index.html\"\n                isExternal={true}\n                model={{\n                    type: 'laptop',\n                    alt: 'Wa-Sticker-Formatter',\n                    textures: [\n                        {\n                            src: park_model,\n                            srcSet: `${park_model} 980w, ${park_model} 1376w`,\n                            placeholder: park_model,\n                        },\n                    ],\n                }}\n            />\n           <ProjectSummary\n                id=\"project-2\"\n                alternate\n                sectionRef={projectTwo}\n                visible={visibleSections.includes(projectTwo.current)}\n                index={2}\n                title=\"上海复兴公园元宇宙\"\n                description=\"Shanghai Fuxin Park in Metaverse\"\n                buttonText=\"敬请期待\"\n                buttonLink=\"\"\n                model={{\n                    type: 'vr',\n                    alt: 'Spotifydl-Core',\n                    textures: [\n                        {\n                            src: chess,\n                            srcSet: `${chess} 254w, ${chess} 508w`,\n                            placeholder: chess_ph,\n                        }\n                    ],\n                }}\n            />\n             {/*<ProjectSummary\n                id=\"project-3\"\n                sectionRef={projectThree}\n                visible={visibleSections.includes(projectThree.current)}\n                index={3}\n                title=\"Fubuki\"\n                description=\"Github GraphQL API Wraper\"\n                buttonText=\"View Project\"\n                buttonLink=\"https://github.com/alensaito1/fubuki\"\n                model={{\n                    type: 'laptop',\n                    alt: 'Fubuki',\n                    textures: [\n                        {\n                            src: fubuki,\n                            srcSet: `${fubuki} 800w, ${fubuki} 1440w`,\n                            placeholder: fubuki_ph,\n                        },\n                    ],\n                }}\n            />\n            <ProjectSummary\n                id=\"project-4\"\n                alternate\n                sectionRef={projectFour}\n                visible={visibleSections.includes(projectFour.current)}\n                index={4}\n                title=\"Spotifydl-Core\"\n                description=\"Spotify Downloader for NodeJS\"\n                buttonText=\"View Project\"\n                buttonLink=\"https://github.com/AlenSaito1/Spotifydl-Core\"\n                model={{\n                    type: 'phone',\n                    alt: 'Spotifydl-Core',\n                    textures: [\n                        {\n                            src: player,\n                            srcSet: `${player} 254w, ${player} 508w`,\n                            placeholder: player_placeholder,\n                        },\n                        {\n                            src: spotify_player,\n                            srcSet: `${spotify_player} 254w, ${spotify_player} 508w`,\n                            placeholder: spotify_player_placeholder,\n                        },\n                    ],\n                }}\n            />\n            <ProjectSummary\n                id=\"project-5\"\n                sectionRef={projectFive}\n                visible={visibleSections.includes(projectFive.current)}\n                index={5}\n                title=\"Next-Github\"\n                description=\"Github Dynamic Stats Generator & Contribution Visualizer\"\n                buttonText=\"View Project\"\n                buttonLink=\"https://github.com/alensaito1/next-github\"\n                model={{\n                    type: 'laptop',\n                    alt: 'Next-Github',\n                    textures: [\n                        {\n                            src: contrib,\n                            srcSet: `${contrib} 800w, ${contrib} 1440w`,\n                            placeholder: contrib_ph,\n                        },\n                    ],\n                }}\n            /> */}\n            <Carousel\n                id=\"parks\"\n                sectionRef={parksCarousel}\n            ></Carousel>\n            <Profile\n                sectionRef={details}\n                visible={visibleSections.includes(details.current)}\n                id=\"details\"\n            />\n            <Footer />\n        </div>\n    )\n}\n\nexport default Home\n","export default __webpack_public_path__ + \"static/media/gotham-bold.73ce573b.woff2\";","import { Fragment } from 'react'\nimport classNames from 'classnames'\nimport { Helmet } from 'react-helmet'\nimport GothamBold from 'assets/fonts/gotham-bold.woff2'\nimport './index.css'\n\nconst Heading = ({\n    children,\n    level = 1,\n    as,\n    align = 'auto',\n    weight = 'medium',\n    className,\n    ...rest\n}) => {\n    const clampedLevel = Math.min(Math.max(level, 0), 4)\n    const Component = as || `h${Math.max(clampedLevel, 1)}`\n\n    return (\n        <Fragment>\n            {/* Conditionally load the bold font weight because we use it less frequently */}\n            {weight === 'bold' && (\n                <Helmet>\n                    <link rel=\"preload\" href={GothamBold} as=\"font\" crossorigin=\"\" />\n                    <style>\n                        {`\n              @font-face {\n                font-family: 'Gotham';\n                font-weight: 700;\n                src: url(${GothamBold}) format('woff2');\n                font-display: swap;\n              }\n            `}\n                    </style>\n                </Helmet>\n            )}\n            <Component\n                className={classNames(\n                    className,\n                    'heading',\n                    `heading--align-${align}`,\n                    `heading--level-${clampedLevel}`,\n                    `heading--weight-${weight}`\n                )}\n                {...rest}\n            >\n                {children}\n            </Component>\n        </Fragment>\n    )\n}\n\nexport default Heading\n","import { forwardRef } from 'react'\nimport classNames from 'classnames'\nimport './index.css'\n\nconst Section = forwardRef(\n    ({ as: Component = 'div', children, className, ...rest }, ref) => (\n        <Component className={classNames('section', className)} ref={ref} {...rest}>\n            {children}\n        </Component>\n    )\n)\n\nexport default Section\n","import classNames from 'classnames'\nimport './index.css'\n\nconst Text = ({\n    children,\n    size = 'm',\n    as: Component = 'p',\n    align = 'auto',\n    weight = 'auto',\n    secondary,\n    className,\n    ...rest\n}) => {\n    return (\n        <Component\n            className={classNames(\n                className,\n                'text',\n                `text--align-${align}`,\n                `text--size-${size}`,\n                `text--weight-${weight}`,\n                {\n                    'text--secondary': secondary,\n                }\n            )}\n            {...rest}\n        >\n            {children}\n        </Component>\n    )\n}\n\nexport default Text\n","import { useRef, useEffect, memo } from 'react'\nimport classNames from 'classnames'\nimport { usePrefersReducedMotion } from 'hooks'\nimport { spring, chain, delay, value } from 'popmotion'\nimport VisuallyHidden from 'components/VisuallyHidden'\nimport prerender from 'utils/prerender'\nimport './index.css'\n\n// prettier-ignore\nconst glyphs = [\n  'ア', 'イ', 'ウ', 'エ', 'オ',\n  'カ', 'キ', 'ク', 'ケ', 'コ',\n  'サ', 'シ', 'ス', 'セ', 'ソ',\n  'タ', 'チ', 'ツ', 'テ', 'ト',\n  'ナ', 'ニ', 'ヌ', 'ネ', 'ノ',\n  'ハ', 'ヒ', 'フ', 'ヘ', 'ホ',\n  'マ', 'ミ', 'ム', 'メ', 'モ',\n  'ヤ', 'ユ', 'ヨ', 'ー',\n  'ラ', 'リ', 'ル', 'レ', 'ロ',\n  'ワ', 'ヰ', 'ヱ', 'ヲ', 'ン',\n  'ガ', 'ギ', 'グ', 'ゲ', 'ゴ',\n  'ザ', 'ジ', 'ズ', 'ゼ', 'ゾ',\n  'ダ', 'ヂ', 'ヅ', 'デ', 'ド',\n  'バ', 'ビ', 'ブ', 'ベ', 'ボ',\n  'パ', 'ピ', 'プ', 'ペ', 'ポ',\n];\n\nconst CharType = {\n    Glyph: 'glyph',\n    Value: 'value',\n}\n\nfunction shuffle(content, output, position) {\n    return content.map((value, index) => {\n        if (index < position) {\n            return { type: CharType.Value, value }\n        }\n\n        if (position % 1 < 0.5) {\n            const rand = Math.floor(Math.random() * glyphs.length)\n            return { type: CharType.Glyph, value: glyphs[rand] }\n        }\n\n        return { type: CharType.Glyph, value: output[index].value }\n    })\n}\n\nconst DecoderText = ({\n    text,\n    start = true,\n    delay: startDelay = 0,\n    className,\n    ...rest\n}) => {\n    const output = useRef([{ type: CharType.Glyph, value: '' }])\n    const container = useRef()\n    const reduceMotion = usePrefersReducedMotion()\n\n    useEffect(() => {\n        const containerInstance = container.current\n        const content = text.split('')\n        let animation\n\n        const renderOutput = () => {\n            const characterMap = output.current.map(item => {\n                return `<span class=\"decoder-text__${item.type}\">${item.value}</span>`\n            })\n\n            containerInstance.innerHTML = characterMap.join('')\n        }\n\n        const springValue = value(0, position => {\n            output.current = shuffle(content, output.current, position)\n            renderOutput()\n        })\n\n        if (start && !animation && !reduceMotion && !prerender) {\n            animation = chain(\n                delay(startDelay),\n                spring({\n                    from: 0,\n                    to: content.length,\n                    stiffness: 8,\n                    damping: 5,\n                })\n            ).start(springValue)\n        }\n\n        if (reduceMotion) {\n            output.current = content.map((value, index) => ({\n                type: CharType.Value,\n                value: content[index],\n            }))\n            renderOutput()\n        }\n\n        return () => {\n            if (animation) {\n                animation.stop()\n            }\n        }\n    }, [reduceMotion, start, startDelay, text])\n\n    return (\n        <span className={classNames('decoder-text', className)} {...rest}>\n            <VisuallyHidden className=\"decoder-text__label\">{text}</VisuallyHidden>\n            <span aria-hidden className=\"decoder-text__content\" ref={container} />\n        </span>\n    )\n}\n\nexport default memo(DecoderText)\n","/**\n * Uses the browser's image loading to get the correct image src from a srcSet\n */\nexport async function getImageFromSrcSet({ src, srcSet, sizes }) {\n    return new Promise((resolve, reject) => {\n        try {\n            if (!src && !srcSet) {\n                throw new Error('No image src or srcSet provided')\n            }\n\n            const tempImage = new Image()\n\n            if (src) {\n                tempImage.src = src\n            }\n\n            if (srcSet) {\n                tempImage.srcset = srcSet\n            }\n\n            if (sizes) {\n                tempImage.sizes = sizes\n            }\n\n            const onLoad = () => {\n                tempImage.removeEventListener('load', onLoad)\n                const source = tempImage.currentSrc\n                resolve(source)\n            }\n\n            tempImage.addEventListener('load', onLoad)\n        } catch (error) {\n            reject(`Error loading ${srcSet}: ${error}`)\n        }\n    })\n}\n\n/**\n * Generates a transparent png of a given width and height\n */\nexport function generateImage(width = 1, height = 1) {\n    const canvas = document.createElement('canvas')\n    const ctx = canvas.getContext('2d')\n\n    canvas.width = width\n    canvas.height = height\n\n    ctx.fillStyle = 'rgba(0, 0, 0, 0)'\n    ctx.fillRect(0, 0, width, height)\n    const image = canvas.toDataURL('image/png', '')\n    canvas.remove()\n    return image\n}\n\n/**\n * Use native image srcSet resolution for video sources\n */\nexport async function resolveVideoSrcFromSrcSet(srcSet) {\n    const sources = srcSet.split(', ').map(srcString => {\n        const [src, width] = srcString.split(' ')\n        const image = generateImage(Number(width.replace('w', '')))\n        return { src, image, width }\n    })\n\n    const fakeSrcSet = sources.map(({ image, width }) => `${image} ${width}`).join(', ')\n    const fakeSrc = await getImageFromSrcSet({ srcSet: fakeSrcSet })\n\n    const videoSrc = sources.find(src => src.image === fakeSrc)\n    return videoSrc.src\n}\n","import { Link as RouterLink } from 'react-router-dom'\nimport classNames from 'classnames'\nimport { blurOnMouseUp } from 'utils/focus'\nimport './index.css'\n\n// File extensions that can be linked to\nconst VALID_EXT = ['txt', 'png', 'jpg']\n\nconst Link = ({ rel, target, children, secondary, className, href, as, ...rest }) => {\n    const isValidExtension = VALID_EXT.includes(href?.split('.').pop())\n    const isAnchor = href?.includes('://') || href?.[0] === '#' || isValidExtension\n    const relValue = rel || (isAnchor ? 'noreferrer noopener' : undefined)\n    const targetValue = target || (isAnchor ? '_blank' : undefined)\n    const Component = as || (isAnchor ? 'a' : RouterLink)\n\n    return (\n        <Component\n            className={classNames('link', className, { 'link--secondary': secondary })}\n            rel={relValue}\n            href={isAnchor ? href : undefined}\n            to={!isAnchor ? href : undefined}\n            target={targetValue}\n            onMouseUp={blurOnMouseUp}\n            {...rest}\n        >\n            {children}\n        </Component>\n    )\n}\n\nexport default Link\n","import classNames from 'classnames'\nimport { numToMs } from 'utils/style'\nimport './index.css'\n\nconst Divider = ({\n    lineWidth,\n    lineHeight,\n    notchWidth,\n    notchHeight,\n    collapseDelay,\n    collapsed,\n    className,\n    style,\n}) => (\n    <div\n        className={classNames('divider', className)}\n        style={{\n            '--lineWidth': lineWidth,\n            '--lineHeight': lineHeight,\n            '--notchWidth': notchWidth,\n            '--notchHeight': notchHeight,\n            '--collapseDelay': numToMs(collapseDelay),\n            ...style,\n        }}\n    >\n        <div\n            className={classNames('divider__line', {\n                'divider__line--collapsed': collapsed,\n            })}\n        />\n        <div\n            className={classNames('divider__notch', {\n                'divider__notch--collapsed': collapsed,\n            })}\n            style={{ '--collapseDelay': numToMs(collapseDelay + 160) }}\n        />\n    </div>\n)\n\nDivider.defaultProps = {\n    lineWidth: '100%',\n    lineHeight: '2px',\n    notchWidth: '90px',\n    notchHeight: '10px',\n    collapsed: false,\n    collapseDelay: 0,\n}\n\nexport default Divider\n","import { useState, useEffect, useRef, useCallback, Fragment } from 'react'\nimport classNames from 'classnames'\nimport { usePrefersReducedMotion, useInViewport } from 'hooks'\nimport { Button } from 'components/Button'\nimport Icon from 'components/Icon'\nimport { Transition } from 'react-transition-group'\nimport { reflow } from 'utils/transition'\nimport prerender from 'utils/prerender'\nimport { tokens } from 'components/ThemeProvider/theme'\nimport { msToNum, numToMs } from 'utils/style'\nimport { resolveVideoSrcFromSrcSet } from 'utils/image'\nimport { useTheme } from 'components/ThemeProvider'\nimport VisuallyHidden from 'components/VisuallyHidden'\nimport './index.css'\n\nconst Image = ({ className, style, reveal, delay = 0, raised, src, ...rest }) => {\n    const [loaded, setLoaded] = useState(false)\n    const { themeId } = useTheme()\n    const containerRef = useRef()\n    const inViewport = useInViewport(containerRef, !src?.endsWith('.mp4'))\n\n    const onLoad = useCallback(() => {\n        setLoaded(true)\n    }, [])\n\n    return (\n        <div\n            className={classNames('image', className, `image--${themeId}`, {\n                'image--in-viewport': inViewport,\n                'image--reveal': reveal,\n                'image--raised': raised,\n            })}\n            style={{ ...style, '--delay': numToMs(delay) }}\n            ref={containerRef}\n        >\n            <ImageElements\n                delay={delay}\n                onLoad={onLoad}\n                loaded={loaded}\n                inViewport={inViewport}\n                reveal={reveal}\n                src={src}\n                {...rest}\n            />\n        </div>\n    )\n}\n\nconst ImageElements = ({\n    onLoad,\n    loaded,\n    inViewport,\n    srcSet,\n    placeholder,\n    delay,\n    src,\n    alt,\n    play = true,\n    reveal,\n    ...rest\n}) => {\n    const prefersReducedMotion = usePrefersReducedMotion()\n    const [showPlaceholder, setShowPlaceholder] = useState(true)\n    const [playing, setPlaying] = useState(!prefersReducedMotion)\n    const [showPlayButton, setShowPlayButton] = useState(false)\n    const [isHovered, setIsHovered] = useState(false)\n    const [isFocused, setIsFocused] = useState(false)\n    const [placeholderSize, setPlaceholderSize] = useState()\n    const [videoSrc, setVideoSrc] = useState()\n    const placeholderRef = useRef()\n    const videoRef = useRef()\n    const isVideo = src?.endsWith('.mp4')\n    const imgSrc = src || srcSet?.split(' ')[0]\n    const showFullRes = !prerender && inViewport\n\n    useEffect(() => {\n        const purgePlaceholder = () => {\n            setShowPlaceholder(false)\n        }\n\n        const placeholderElement = placeholderRef.current\n        placeholderElement.addEventListener('transitionend', purgePlaceholder)\n\n        return function cleanUp() {\n            if (placeholderElement) {\n                placeholderElement.removeEventListener('transitionend', purgePlaceholder)\n            }\n        }\n    }, [])\n\n    useEffect(() => {\n        const resolveVideoSrc = async () => {\n            const resolvedVideoSrc = await resolveVideoSrcFromSrcSet(srcSet)\n            setVideoSrc(resolvedVideoSrc)\n        }\n\n        if (isVideo && srcSet) {\n            resolveVideoSrc()\n        } else if (isVideo) {\n            setVideoSrc(src)\n        }\n    }, [isVideo, src, srcSet])\n\n    useEffect(() => {\n        const { width, height } = placeholderRef.current\n\n        if (width && height) {\n            setPlaceholderSize({ width, height })\n        }\n    }, [])\n\n    useEffect(() => {\n        if (!videoRef.current || !videoSrc) return\n\n        if (!play || !inViewport) {\n            setPlaying(false)\n            videoRef.current.pause()\n        } else if (inViewport && !prefersReducedMotion && !prerender) {\n            setPlaying(true)\n            videoRef.current.play()\n        }\n    }, [inViewport, play, prefersReducedMotion, videoSrc])\n\n    const handlePlaceholderLoad = event => {\n        const { width, height } = event.target\n        setPlaceholderSize({ width, height })\n    }\n\n    const togglePlaying = event => {\n        event.preventDefault()\n\n        if (videoRef.current.paused) {\n            setPlaying(true)\n            videoRef.current.play()\n        } else {\n            setPlaying(false)\n            videoRef.current.pause()\n        }\n    }\n\n    const handleShowPlayButton = () => {\n        setShowPlayButton(true)\n        setIsHovered(true)\n    }\n\n    const handleFocusPlayButton = () => {\n        setShowPlayButton(true)\n        setIsFocused(true)\n    }\n\n    return (\n        <div\n            className={classNames('image__element-wrapper', {\n                'image__element-wrapper--reveal': reveal,\n                'image__element-wrapper--in-viewport': inViewport,\n            })}\n            onMouseOver={isVideo ? handleShowPlayButton : undefined}\n            onMouseOut={isVideo ? () => setIsHovered(false) : undefined}\n            style={{ '--delay': numToMs(delay + 1000) }}\n        >\n            {isVideo && (\n                <Fragment>\n                    <video\n                        muted\n                        loop\n                        playsInline\n                        className={classNames('image__element', {\n                            'image__element--loaded': loaded,\n                        })}\n                        autoPlay={!prefersReducedMotion}\n                        role=\"img\"\n                        onLoadStart={onLoad}\n                        src={videoSrc}\n                        aria-label={alt}\n                        ref={videoRef}\n                        {...rest}\n                    />\n                    <Transition\n                        in={isHovered || isFocused}\n                        onExit={reflow}\n                        onExited={() => setShowPlayButton(false)}\n                        timeout={{ enter: 0, exit: msToNum(tokens.base.durationS) }}\n                    >\n                        {status => (\n                            <VisuallyHidden visible={showPlayButton}>\n                                <Button\n                                    className={classNames(\n                                        'image__button',\n                                        `image__button--${status}`\n                                    )}\n                                    onFocus={handleFocusPlayButton}\n                                    onBlur={() => setIsFocused(false)}\n                                    onClick={togglePlaying}\n                                >\n                                    <Icon icon={playing ? 'pause' : 'play'} />\n                                    {playing ? 'Pause' : 'Play'}\n                                </Button>\n                            </VisuallyHidden>\n                        )}\n                    </Transition>\n                </Fragment>\n            )}\n            {!isVideo && (\n                <img\n                    className={classNames('image__element', {\n                        'image__element--loaded': loaded,\n                    })}\n                    onLoad={onLoad}\n                    decoding=\"async\"\n                    src={showFullRes ? imgSrc : undefined}\n                    srcSet={showFullRes ? srcSet : undefined}\n                    width={placeholderSize?.width}\n                    height={placeholderSize?.height}\n                    alt={alt}\n                    {...rest}\n                />\n            )}\n            {showPlaceholder && (\n                <img\n                    aria-hidden\n                    className={classNames('image__placeholder', {\n                        'image__placeholder--loaded': loaded,\n                    })}\n                    style={{ '--delay': numToMs(delay) }}\n                    ref={placeholderRef}\n                    src={placeholder}\n                    onLoad={handlePlaceholderLoad}\n                    width={placeholderSize?.width}\n                    height={placeholderSize?.height}\n                    decoding=\"async\"\n                    alt=\"\"\n                    role=\"presentation\"\n                />\n            )}\n        </div>\n    )\n}\n\nexport default Image\n","import Link from 'components/Link'\nimport './index.css'\n\nconst Footer = () => (\n    <footer className=\"footer\">\n        <span className=\"footer__date\">\n            {`© ${new Date().getFullYear()} 上海大学.`}\n        </span>\n        <Link secondary className=\"footer__link\" href=\"/humans.txt\" target=\"_self\">\n            Crafted by yours truly\n        </Link>\n    </footer>\n)\n\nexport default Footer\n","/**\n * Clean up a scene's materials and geometry\n */\nexport const cleanScene = scene => {\n    scene.traverse(object => {\n        if (!object.isMesh) return\n\n        object.geometry.dispose()\n\n        if (object.material.isMaterial) {\n            cleanMaterial(object.material)\n        } else {\n            for (const material of object.material) {\n                cleanMaterial(material)\n            }\n        }\n    })\n}\n\n/**\n * Clean up and dispose of a material\n */\nexport const cleanMaterial = material => {\n    material.dispose()\n\n    for (const key of Object.keys(material)) {\n        const value = material[key]\n        if (value && typeof value === 'object' && 'minFilter' in value) {\n            value.dispose()\n        }\n    }\n}\n\n/**\n * Clean up and dispose of a renderer\n */\nexport const cleanRenderer = renderer => {\n    renderer.dispose()\n    renderer.forceContextLoss()\n    renderer = null\n}\n\n/**\n * Clean up lights by removing them from their parent\n */\nexport const removeLights = lights => {\n    for (const light of lights) {\n        light.parent.remove(light)\n    }\n}\n"],"sourceRoot":""}